// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class ResetResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):ResetResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsResetResponse(bb:flatbuffers.ByteBuffer, obj?:ResetResponse):ResetResponse {
  return (obj || new ResetResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsResetResponse(bb:flatbuffers.ByteBuffer, obj?:ResetResponse):ResetResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ResetResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startResetResponse(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endResetResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createResetResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  ResetResponse.startResetResponse(builder);
  return ResetResponse.endResetResponse(builder);
}

unpack(): ResetResponseT {
  return new ResetResponseT();
}


unpackTo(_o: ResetResponseT): void {}
}

export class ResetResponseT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ResetResponse.createResetResponse(builder);
}
}
