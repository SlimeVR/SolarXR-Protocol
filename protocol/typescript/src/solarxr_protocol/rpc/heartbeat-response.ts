// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class HeartbeatResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):HeartbeatResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeartbeatResponse(bb:flatbuffers.ByteBuffer, obj?:HeartbeatResponse):HeartbeatResponse {
  return (obj || new HeartbeatResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeartbeatResponse(bb:flatbuffers.ByteBuffer, obj?:HeartbeatResponse):HeartbeatResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeartbeatResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startHeartbeatResponse(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endHeartbeatResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeartbeatResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  HeartbeatResponse.startHeartbeatResponse(builder);
  return HeartbeatResponse.endHeartbeatResponse(builder);
}

unpack(): HeartbeatResponseT {
  return new HeartbeatResponseT();
}


unpackTo(_o: HeartbeatResponseT): void {}
}

export class HeartbeatResponseT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return HeartbeatResponse.createHeartbeatResponse(builder);
}
}
