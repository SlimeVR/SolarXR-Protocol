// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class MacAddress {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):MacAddress {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

byte0():number {
  return this.bb!.readUint8(this.bb_pos);
}

byte1():number {
  return this.bb!.readUint8(this.bb_pos + 1);
}

byte2():number {
  return this.bb!.readUint8(this.bb_pos + 2);
}

byte3():number {
  return this.bb!.readUint8(this.bb_pos + 3);
}

byte4():number {
  return this.bb!.readUint8(this.bb_pos + 4);
}

byte5():number {
  return this.bb!.readUint8(this.bb_pos + 5);
}

static sizeOf():number {
  return 6;
}

static createMacAddress(builder:flatbuffers.Builder, byte_0: number, byte_1: number, byte_2: number, byte_3: number, byte_4: number, byte_5: number):flatbuffers.Offset {
  builder.prep(1, 6);
  builder.writeInt8(byte_5);
  builder.writeInt8(byte_4);
  builder.writeInt8(byte_3);
  builder.writeInt8(byte_2);
  builder.writeInt8(byte_1);
  builder.writeInt8(byte_0);
  return builder.offset();
}


unpack(): MacAddressT {
  return new MacAddressT(
    this.byte0(),
    this.byte1(),
    this.byte2(),
    this.byte3(),
    this.byte4(),
    this.byte5()
  );
}


unpackTo(_o: MacAddressT): void {
  _o.byte0 = this.byte0();
  _o.byte1 = this.byte1();
  _o.byte2 = this.byte2();
  _o.byte3 = this.byte3();
  _o.byte4 = this.byte4();
  _o.byte5 = this.byte5();
}
}

export class MacAddressT {
constructor(
  public byte0: number = 0,
  public byte1: number = 0,
  public byte2: number = 0,
  public byte3: number = 0,
  public byte4: number = 0,
  public byte5: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return MacAddress.createMacAddress(builder,
    this.byte0,
    this.byte1,
    this.byte2,
    this.byte3,
    this.byte4,
    this.byte5
  );
}
}
