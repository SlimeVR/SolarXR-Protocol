// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { BodyPart } from '../../slimevr-protocol/datatypes/body-part';


/**
 * Wraps `BodyPart`
 */
export class BodyPartW {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):BodyPartW {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBodyPartW(bb:flatbuffers.ByteBuffer, obj?:BodyPartW):BodyPartW {
  return (obj || new BodyPartW()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBodyPartW(bb:flatbuffers.ByteBuffer, obj?:BodyPartW):BodyPartW {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BodyPartW()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

e():BodyPart {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : BodyPart.NONE;
}

static startBodyPartW(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addE(builder:flatbuffers.Builder, e:BodyPart) {
  builder.addFieldInt8(0, e, BodyPart.NONE);
}

static endBodyPartW(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBodyPartW(builder:flatbuffers.Builder, e:BodyPart):flatbuffers.Offset {
  BodyPartW.startBodyPartW(builder);
  BodyPartW.addE(builder, e);
  return BodyPartW.endBodyPartW(builder);
}

unpack(): BodyPartWT {
  return new BodyPartWT(
    this.e()
  );
}


unpackTo(_o: BodyPartWT): void {
  _o.e = this.e();
}
}

export class BodyPartWT {
constructor(
  public e: BodyPart = BodyPart.NONE
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return BodyPartW.createBodyPartW(builder,
    this.e
  );
}
}
