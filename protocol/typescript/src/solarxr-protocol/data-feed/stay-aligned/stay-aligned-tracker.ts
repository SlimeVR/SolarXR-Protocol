// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class StayAlignedTracker implements flatbuffers.IUnpackableObject<StayAlignedTrackerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StayAlignedTracker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStayAlignedTracker(bb:flatbuffers.ByteBuffer, obj?:StayAlignedTracker):StayAlignedTracker {
  return (obj || new StayAlignedTracker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStayAlignedTracker(bb:flatbuffers.ByteBuffer, obj?:StayAlignedTracker):StayAlignedTracker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StayAlignedTracker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

yawCorrectionInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

lockedErrorInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

centerErrorInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

neighborErrorInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

locked():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startStayAlignedTracker(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addYawCorrectionInDeg(builder:flatbuffers.Builder, yawCorrectionInDeg:number) {
  builder.addFieldFloat32(0, yawCorrectionInDeg, 0.0);
}

static addLockedErrorInDeg(builder:flatbuffers.Builder, lockedErrorInDeg:number) {
  builder.addFieldFloat32(1, lockedErrorInDeg, 0.0);
}

static addCenterErrorInDeg(builder:flatbuffers.Builder, centerErrorInDeg:number) {
  builder.addFieldFloat32(2, centerErrorInDeg, 0.0);
}

static addNeighborErrorInDeg(builder:flatbuffers.Builder, neighborErrorInDeg:number) {
  builder.addFieldFloat32(3, neighborErrorInDeg, 0.0);
}

static addLocked(builder:flatbuffers.Builder, locked:boolean) {
  builder.addFieldInt8(4, +locked, +false);
}

static endStayAlignedTracker(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStayAlignedTracker(builder:flatbuffers.Builder, yawCorrectionInDeg:number, lockedErrorInDeg:number, centerErrorInDeg:number, neighborErrorInDeg:number, locked:boolean):flatbuffers.Offset {
  StayAlignedTracker.startStayAlignedTracker(builder);
  StayAlignedTracker.addYawCorrectionInDeg(builder, yawCorrectionInDeg);
  StayAlignedTracker.addLockedErrorInDeg(builder, lockedErrorInDeg);
  StayAlignedTracker.addCenterErrorInDeg(builder, centerErrorInDeg);
  StayAlignedTracker.addNeighborErrorInDeg(builder, neighborErrorInDeg);
  StayAlignedTracker.addLocked(builder, locked);
  return StayAlignedTracker.endStayAlignedTracker(builder);
}

unpack(): StayAlignedTrackerT {
  return new StayAlignedTrackerT(
    this.yawCorrectionInDeg(),
    this.lockedErrorInDeg(),
    this.centerErrorInDeg(),
    this.neighborErrorInDeg(),
    this.locked()
  );
}


unpackTo(_o: StayAlignedTrackerT): void {
  _o.yawCorrectionInDeg = this.yawCorrectionInDeg();
  _o.lockedErrorInDeg = this.lockedErrorInDeg();
  _o.centerErrorInDeg = this.centerErrorInDeg();
  _o.neighborErrorInDeg = this.neighborErrorInDeg();
  _o.locked = this.locked();
}
}

export class StayAlignedTrackerT implements flatbuffers.IGeneratedObject {
constructor(
  public yawCorrectionInDeg: number = 0.0,
  public lockedErrorInDeg: number = 0.0,
  public centerErrorInDeg: number = 0.0,
  public neighborErrorInDeg: number = 0.0,
  public locked: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StayAlignedTracker.createStayAlignedTracker(builder,
    this.yawCorrectionInDeg,
    this.lockedErrorInDeg,
    this.centerErrorInDeg,
    this.neighborErrorInDeg,
    this.locked
  );
}
}
