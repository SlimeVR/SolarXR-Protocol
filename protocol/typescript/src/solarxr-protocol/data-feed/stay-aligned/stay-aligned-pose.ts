// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class StayAlignedPose implements flatbuffers.IUnpackableObject<StayAlignedPoseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StayAlignedPose {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStayAlignedPose(bb:flatbuffers.ByteBuffer, obj?:StayAlignedPose):StayAlignedPose {
  return (obj || new StayAlignedPose()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStayAlignedPose(bb:flatbuffers.ByteBuffer, obj?:StayAlignedPose):StayAlignedPose {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StayAlignedPose()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

upperLegAngleInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

lowerLegAngleInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

footAngleInDeg():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startStayAlignedPose(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUpperLegAngleInDeg(builder:flatbuffers.Builder, upperLegAngleInDeg:number) {
  builder.addFieldFloat32(0, upperLegAngleInDeg, 0.0);
}

static addLowerLegAngleInDeg(builder:flatbuffers.Builder, lowerLegAngleInDeg:number) {
  builder.addFieldFloat32(1, lowerLegAngleInDeg, 0.0);
}

static addFootAngleInDeg(builder:flatbuffers.Builder, footAngleInDeg:number) {
  builder.addFieldFloat32(2, footAngleInDeg, 0.0);
}

static endStayAlignedPose(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStayAlignedPose(builder:flatbuffers.Builder, upperLegAngleInDeg:number, lowerLegAngleInDeg:number, footAngleInDeg:number):flatbuffers.Offset {
  StayAlignedPose.startStayAlignedPose(builder);
  StayAlignedPose.addUpperLegAngleInDeg(builder, upperLegAngleInDeg);
  StayAlignedPose.addLowerLegAngleInDeg(builder, lowerLegAngleInDeg);
  StayAlignedPose.addFootAngleInDeg(builder, footAngleInDeg);
  return StayAlignedPose.endStayAlignedPose(builder);
}

unpack(): StayAlignedPoseT {
  return new StayAlignedPoseT(
    this.upperLegAngleInDeg(),
    this.lowerLegAngleInDeg(),
    this.footAngleInDeg()
  );
}


unpackTo(_o: StayAlignedPoseT): void {
  _o.upperLegAngleInDeg = this.upperLegAngleInDeg();
  _o.lowerLegAngleInDeg = this.lowerLegAngleInDeg();
  _o.footAngleInDeg = this.footAngleInDeg();
}
}

export class StayAlignedPoseT implements flatbuffers.IGeneratedObject {
constructor(
  public upperLegAngleInDeg: number = 0.0,
  public lowerLegAngleInDeg: number = 0.0,
  public footAngleInDeg: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StayAlignedPose.createStayAlignedPose(builder,
    this.upperLegAngleInDeg,
    this.lowerLegAngleInDeg,
    this.footAngleInDeg
  );
}
}
