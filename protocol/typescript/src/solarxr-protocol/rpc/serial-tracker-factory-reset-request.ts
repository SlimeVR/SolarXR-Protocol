// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Sends the FRST cmd to the currently over the Serial Montior connected Tracker
 */
export class SerialTrackerFactoryResetRequest implements flatbuffers.IUnpackableObject<SerialTrackerFactoryResetRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SerialTrackerFactoryResetRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSerialTrackerFactoryResetRequest(bb:flatbuffers.ByteBuffer, obj?:SerialTrackerFactoryResetRequest):SerialTrackerFactoryResetRequest {
  return (obj || new SerialTrackerFactoryResetRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSerialTrackerFactoryResetRequest(bb:flatbuffers.ByteBuffer, obj?:SerialTrackerFactoryResetRequest):SerialTrackerFactoryResetRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SerialTrackerFactoryResetRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startSerialTrackerFactoryResetRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSerialTrackerFactoryResetRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSerialTrackerFactoryResetRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  SerialTrackerFactoryResetRequest.startSerialTrackerFactoryResetRequest(builder);
  return SerialTrackerFactoryResetRequest.endSerialTrackerFactoryResetRequest(builder);
}

unpack(): SerialTrackerFactoryResetRequestT {
  return new SerialTrackerFactoryResetRequestT();
}


unpackTo(_o: SerialTrackerFactoryResetRequestT): void {}
}

export class SerialTrackerFactoryResetRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SerialTrackerFactoryResetRequest.createSerialTrackerFactoryResetRequest(builder);
}
}
