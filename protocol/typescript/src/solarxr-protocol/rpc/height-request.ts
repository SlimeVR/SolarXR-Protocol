// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class HeightRequest implements flatbuffers.IUnpackableObject<HeightRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HeightRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeightRequest(bb:flatbuffers.ByteBuffer, obj?:HeightRequest):HeightRequest {
  return (obj || new HeightRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeightRequest(bb:flatbuffers.ByteBuffer, obj?:HeightRequest):HeightRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HeightRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startHeightRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endHeightRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHeightRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  HeightRequest.startHeightRequest(builder);
  return HeightRequest.endHeightRequest(builder);
}

unpack(): HeightRequestT {
  return new HeightRequestT();
}


unpackTo(_o: HeightRequestT): void {}
}

export class HeightRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return HeightRequest.createHeightRequest(builder);
}
}
