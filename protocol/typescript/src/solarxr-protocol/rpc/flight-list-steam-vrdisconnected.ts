// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class FlightListSteamVRDisconnected implements flatbuffers.IUnpackableObject<FlightListSteamVRDisconnectedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FlightListSteamVRDisconnected {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFlightListSteamVRDisconnected(bb:flatbuffers.ByteBuffer, obj?:FlightListSteamVRDisconnected):FlightListSteamVRDisconnected {
  return (obj || new FlightListSteamVRDisconnected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFlightListSteamVRDisconnected(bb:flatbuffers.ByteBuffer, obj?:FlightListSteamVRDisconnected):FlightListSteamVRDisconnected {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FlightListSteamVRDisconnected()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * Name of bridge in the server's config
 */
bridgeSettingsName():string|null
bridgeSettingsName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
bridgeSettingsName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startFlightListSteamVRDisconnected(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addBridgeSettingsName(builder:flatbuffers.Builder, bridgeSettingsNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, bridgeSettingsNameOffset, 0);
}

static endFlightListSteamVRDisconnected(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFlightListSteamVRDisconnected(builder:flatbuffers.Builder, bridgeSettingsNameOffset:flatbuffers.Offset):flatbuffers.Offset {
  FlightListSteamVRDisconnected.startFlightListSteamVRDisconnected(builder);
  FlightListSteamVRDisconnected.addBridgeSettingsName(builder, bridgeSettingsNameOffset);
  return FlightListSteamVRDisconnected.endFlightListSteamVRDisconnected(builder);
}

unpack(): FlightListSteamVRDisconnectedT {
  return new FlightListSteamVRDisconnectedT(
    this.bridgeSettingsName()
  );
}


unpackTo(_o: FlightListSteamVRDisconnectedT): void {
  _o.bridgeSettingsName = this.bridgeSettingsName();
}
}

export class FlightListSteamVRDisconnectedT implements flatbuffers.IGeneratedObject {
constructor(
  public bridgeSettingsName: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const bridgeSettingsName = (this.bridgeSettingsName !== null ? builder.createString(this.bridgeSettingsName!) : 0);

  return FlightListSteamVRDisconnected.createFlightListSteamVRDisconnected(builder,
    bridgeSettingsName
  );
}
}
