// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * When the server detects a public network profile
 */
export class StatusPublicNetwork implements flatbuffers.IUnpackableObject<StatusPublicNetworkT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StatusPublicNetwork {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatusPublicNetwork(bb:flatbuffers.ByteBuffer, obj?:StatusPublicNetwork):StatusPublicNetwork {
  return (obj || new StatusPublicNetwork()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatusPublicNetwork(bb:flatbuffers.ByteBuffer, obj?:StatusPublicNetwork):StatusPublicNetwork {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StatusPublicNetwork()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startStatusPublicNetwork(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endStatusPublicNetwork(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStatusPublicNetwork(builder:flatbuffers.Builder):flatbuffers.Offset {
  StatusPublicNetwork.startStatusPublicNetwork(builder);
  return StatusPublicNetwork.endStatusPublicNetwork(builder);
}

unpack(): StatusPublicNetworkT {
  return new StatusPublicNetworkT();
}


unpackTo(_o: StatusPublicNetworkT): void {}
}

export class StatusPublicNetworkT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StatusPublicNetwork.createStatusPublicNetwork(builder);
}
}
