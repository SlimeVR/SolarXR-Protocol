// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { FlightListStepId } from '../../solarxr-protocol/rpc/flight-list-step-id.js';


export class IgnoreFlightListStepRequest implements flatbuffers.IUnpackableObject<IgnoreFlightListStepRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IgnoreFlightListStepRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsIgnoreFlightListStepRequest(bb:flatbuffers.ByteBuffer, obj?:IgnoreFlightListStepRequest):IgnoreFlightListStepRequest {
  return (obj || new IgnoreFlightListStepRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsIgnoreFlightListStepRequest(bb:flatbuffers.ByteBuffer, obj?:IgnoreFlightListStepRequest):IgnoreFlightListStepRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new IgnoreFlightListStepRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

stepId():FlightListStepId {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : FlightListStepId.UNKNOWN;
}

ignore():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startIgnoreFlightListStepRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addStepId(builder:flatbuffers.Builder, stepId:FlightListStepId) {
  builder.addFieldInt8(0, stepId, FlightListStepId.UNKNOWN);
}

static addIgnore(builder:flatbuffers.Builder, ignore:boolean) {
  builder.addFieldInt8(1, +ignore, +false);
}

static endIgnoreFlightListStepRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createIgnoreFlightListStepRequest(builder:flatbuffers.Builder, stepId:FlightListStepId, ignore:boolean):flatbuffers.Offset {
  IgnoreFlightListStepRequest.startIgnoreFlightListStepRequest(builder);
  IgnoreFlightListStepRequest.addStepId(builder, stepId);
  IgnoreFlightListStepRequest.addIgnore(builder, ignore);
  return IgnoreFlightListStepRequest.endIgnoreFlightListStepRequest(builder);
}

unpack(): IgnoreFlightListStepRequestT {
  return new IgnoreFlightListStepRequestT(
    this.stepId(),
    this.ignore()
  );
}


unpackTo(_o: IgnoreFlightListStepRequestT): void {
  _o.stepId = this.stepId();
  _o.ignore = this.ignore();
}
}

export class IgnoreFlightListStepRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public stepId: FlightListStepId = FlightListStepId.UNKNOWN,
  public ignore: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return IgnoreFlightListStepRequest.createIgnoreFlightListStepRequest(builder,
    this.stepId,
    this.ignore
  );
}
}
