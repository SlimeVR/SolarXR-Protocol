// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Requests the current state of `OverlayDisplayModeResponse`.
 */
export class OverlayDisplayModeRequest implements flatbuffers.IUnpackableObject<OverlayDisplayModeRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):OverlayDisplayModeRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsOverlayDisplayModeRequest(bb:flatbuffers.ByteBuffer, obj?:OverlayDisplayModeRequest):OverlayDisplayModeRequest {
  return (obj || new OverlayDisplayModeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsOverlayDisplayModeRequest(bb:flatbuffers.ByteBuffer, obj?:OverlayDisplayModeRequest):OverlayDisplayModeRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new OverlayDisplayModeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startOverlayDisplayModeRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endOverlayDisplayModeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createOverlayDisplayModeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  OverlayDisplayModeRequest.startOverlayDisplayModeRequest(builder);
  return OverlayDisplayModeRequest.endOverlayDisplayModeRequest(builder);
}

unpack(): OverlayDisplayModeRequestT {
  return new OverlayDisplayModeRequestT();
}


unpackTo(_o: OverlayDisplayModeRequestT): void {}
}

export class OverlayDisplayModeRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return OverlayDisplayModeRequest.createOverlayDisplayModeRequest(builder);
}
}
