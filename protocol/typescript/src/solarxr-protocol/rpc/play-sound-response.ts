// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { SoundType } from '../../solarxr-protocol/rpc/sound-type.js';


export class PlaySoundResponse implements flatbuffers.IUnpackableObject<PlaySoundResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PlaySoundResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPlaySoundResponse(bb:flatbuffers.ByteBuffer, obj?:PlaySoundResponse):PlaySoundResponse {
  return (obj || new PlaySoundResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPlaySoundResponse(bb:flatbuffers.ByteBuffer, obj?:PlaySoundResponse):PlaySoundResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PlaySoundResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sound():SoundType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : SoundType.TAP_SOUND_FULL_RESET;
}

static startPlaySoundResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addSound(builder:flatbuffers.Builder, sound:SoundType) {
  builder.addFieldInt8(0, sound, SoundType.TAP_SOUND_FULL_RESET);
}

static endPlaySoundResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPlaySoundResponse(builder:flatbuffers.Builder, sound:SoundType):flatbuffers.Offset {
  PlaySoundResponse.startPlaySoundResponse(builder);
  PlaySoundResponse.addSound(builder, sound);
  return PlaySoundResponse.endPlaySoundResponse(builder);
}

unpack(): PlaySoundResponseT {
  return new PlaySoundResponseT(
    this.sound()
  );
}


unpackTo(_o: PlaySoundResponseT): void {
  _o.sound = this.sound();
}
}

export class PlaySoundResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public sound: SoundType = SoundType.TAP_SOUND_FULL_RESET
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return PlaySoundResponse.createPlaySoundResponse(builder,
    this.sound
  );
}
}
