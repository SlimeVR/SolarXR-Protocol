// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class LegTweaks implements flatbuffers.IUnpackableObject<LegTweaksT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LegTweaks {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLegTweaks(bb:flatbuffers.ByteBuffer, obj?:LegTweaks):LegTweaks {
  return (obj || new LegTweaks()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLegTweaks(bb:flatbuffers.ByteBuffer, obj?:LegTweaks):LegTweaks {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LegTweaks()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

correctionStrength():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : null;
}

static startLegTweaks(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addCorrectionStrength(builder:flatbuffers.Builder, correctionStrength:number) {
  builder.addFieldFloat32(0, correctionStrength, 0);
}

static endLegTweaks(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createLegTweaks(builder:flatbuffers.Builder, correctionStrength:number|null):flatbuffers.Offset {
  LegTweaks.startLegTweaks(builder);
  if (correctionStrength !== null)
    LegTweaks.addCorrectionStrength(builder, correctionStrength);
  return LegTweaks.endLegTweaks(builder);
}

unpack(): LegTweaksT {
  return new LegTweaksT(
    this.correctionStrength()
  );
}


unpackTo(_o: LegTweaksT): void {
  _o.correctionStrength = this.correctionStrength();
}
}

export class LegTweaksT implements flatbuffers.IGeneratedObject {
constructor(
  public correctionStrength: number|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return LegTweaks.createLegTweaks(builder,
    this.correctionStrength
  );
}
}
