// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { TrackerId, TrackerIdT } from '../../solarxr-protocol/datatypes/tracker-id.js';


/**
 * If no tracker ID is given, it's the setting for every tracker/device
 */
export class MagToggleResponse implements flatbuffers.IUnpackableObject<MagToggleResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MagToggleResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMagToggleResponse(bb:flatbuffers.ByteBuffer, obj?:MagToggleResponse):MagToggleResponse {
  return (obj || new MagToggleResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMagToggleResponse(bb:flatbuffers.ByteBuffer, obj?:MagToggleResponse):MagToggleResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MagToggleResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

trackerId(obj?:TrackerId):TrackerId|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TrackerId()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

enable():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startMagToggleResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addTrackerId(builder:flatbuffers.Builder, trackerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, trackerIdOffset, 0);
}

static addEnable(builder:flatbuffers.Builder, enable:boolean) {
  builder.addFieldInt8(1, +enable, +false);
}

static endMagToggleResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMagToggleResponse(builder:flatbuffers.Builder, trackerIdOffset:flatbuffers.Offset, enable:boolean):flatbuffers.Offset {
  MagToggleResponse.startMagToggleResponse(builder);
  MagToggleResponse.addTrackerId(builder, trackerIdOffset);
  MagToggleResponse.addEnable(builder, enable);
  return MagToggleResponse.endMagToggleResponse(builder);
}

unpack(): MagToggleResponseT {
  return new MagToggleResponseT(
    (this.trackerId() !== null ? this.trackerId()!.unpack() : null),
    this.enable()
  );
}


unpackTo(_o: MagToggleResponseT): void {
  _o.trackerId = (this.trackerId() !== null ? this.trackerId()!.unpack() : null);
  _o.enable = this.enable();
}
}

export class MagToggleResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public trackerId: TrackerIdT|null = null,
  public enable: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const trackerId = (this.trackerId !== null ? this.trackerId!.pack(builder) : 0);

  return MagToggleResponse.createMagToggleResponse(builder,
    trackerId,
    this.enable
  );
}
}
