// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class TapDetectionSettings implements flatbuffers.IUnpackableObject<TapDetectionSettingsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TapDetectionSettings {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTapDetectionSettings(bb:flatbuffers.ByteBuffer, obj?:TapDetectionSettings):TapDetectionSettings {
  return (obj || new TapDetectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTapDetectionSettings(bb:flatbuffers.ByteBuffer, obj?:TapDetectionSettings):TapDetectionSettings {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TapDetectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

quickResetDelay():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : null;
}

resetDelay():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : null;
}

mountingResetDelay():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : null;
}

quickResetEnabled():boolean|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : null;
}

resetEnabled():boolean|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : null;
}

mountingResetEnabled():boolean|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : null;
}

quickResetTaps():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : null;
}

resetTaps():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : null;
}

mountingResetTaps():number|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : null;
}

static startTapDetectionSettings(builder:flatbuffers.Builder) {
  builder.startObject(9);
}

static addQuickResetDelay(builder:flatbuffers.Builder, quickResetDelay:number) {
  builder.addFieldFloat32(0, quickResetDelay, 0);
}

static addResetDelay(builder:flatbuffers.Builder, resetDelay:number) {
  builder.addFieldFloat32(1, resetDelay, 0);
}

static addMountingResetDelay(builder:flatbuffers.Builder, mountingResetDelay:number) {
  builder.addFieldFloat32(2, mountingResetDelay, 0);
}

static addQuickResetEnabled(builder:flatbuffers.Builder, quickResetEnabled:boolean) {
  builder.addFieldInt8(3, +quickResetEnabled, 0);
}

static addResetEnabled(builder:flatbuffers.Builder, resetEnabled:boolean) {
  builder.addFieldInt8(4, +resetEnabled, 0);
}

static addMountingResetEnabled(builder:flatbuffers.Builder, mountingResetEnabled:boolean) {
  builder.addFieldInt8(5, +mountingResetEnabled, 0);
}

static addQuickResetTaps(builder:flatbuffers.Builder, quickResetTaps:number) {
  builder.addFieldInt16(6, quickResetTaps, 0);
}

static addResetTaps(builder:flatbuffers.Builder, resetTaps:number) {
  builder.addFieldInt16(7, resetTaps, 0);
}

static addMountingResetTaps(builder:flatbuffers.Builder, mountingResetTaps:number) {
  builder.addFieldInt16(8, mountingResetTaps, 0);
}

static endTapDetectionSettings(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTapDetectionSettings(builder:flatbuffers.Builder, quickResetDelay:number|null, resetDelay:number|null, mountingResetDelay:number|null, quickResetEnabled:boolean|null, resetEnabled:boolean|null, mountingResetEnabled:boolean|null, quickResetTaps:number|null, resetTaps:number|null, mountingResetTaps:number|null):flatbuffers.Offset {
  TapDetectionSettings.startTapDetectionSettings(builder);
  if (quickResetDelay !== null)
    TapDetectionSettings.addQuickResetDelay(builder, quickResetDelay);
  if (resetDelay !== null)
    TapDetectionSettings.addResetDelay(builder, resetDelay);
  if (mountingResetDelay !== null)
    TapDetectionSettings.addMountingResetDelay(builder, mountingResetDelay);
  if (quickResetEnabled !== null)
    TapDetectionSettings.addQuickResetEnabled(builder, quickResetEnabled);
  if (resetEnabled !== null)
    TapDetectionSettings.addResetEnabled(builder, resetEnabled);
  if (mountingResetEnabled !== null)
    TapDetectionSettings.addMountingResetEnabled(builder, mountingResetEnabled);
  if (quickResetTaps !== null)
    TapDetectionSettings.addQuickResetTaps(builder, quickResetTaps);
  if (resetTaps !== null)
    TapDetectionSettings.addResetTaps(builder, resetTaps);
  if (mountingResetTaps !== null)
    TapDetectionSettings.addMountingResetTaps(builder, mountingResetTaps);
  return TapDetectionSettings.endTapDetectionSettings(builder);
}

unpack(): TapDetectionSettingsT {
  return new TapDetectionSettingsT(
    this.quickResetDelay(),
    this.resetDelay(),
    this.mountingResetDelay(),
    this.quickResetEnabled(),
    this.resetEnabled(),
    this.mountingResetEnabled(),
    this.quickResetTaps(),
    this.resetTaps(),
    this.mountingResetTaps()
  );
}


unpackTo(_o: TapDetectionSettingsT): void {
  _o.quickResetDelay = this.quickResetDelay();
  _o.resetDelay = this.resetDelay();
  _o.mountingResetDelay = this.mountingResetDelay();
  _o.quickResetEnabled = this.quickResetEnabled();
  _o.resetEnabled = this.resetEnabled();
  _o.mountingResetEnabled = this.mountingResetEnabled();
  _o.quickResetTaps = this.quickResetTaps();
  _o.resetTaps = this.resetTaps();
  _o.mountingResetTaps = this.mountingResetTaps();
}
}

export class TapDetectionSettingsT implements flatbuffers.IGeneratedObject {
constructor(
  public quickResetDelay: number|null = null,
  public resetDelay: number|null = null,
  public mountingResetDelay: number|null = null,
  public quickResetEnabled: boolean|null = null,
  public resetEnabled: boolean|null = null,
  public mountingResetEnabled: boolean|null = null,
  public quickResetTaps: number|null = null,
  public resetTaps: number|null = null,
  public mountingResetTaps: number|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return TapDetectionSettings.createTapDetectionSettings(builder,
    this.quickResetDelay,
    this.resetDelay,
    this.mountingResetDelay,
    this.quickResetEnabled,
    this.resetEnabled,
    this.mountingResetEnabled,
    this.quickResetTaps,
    this.resetTaps,
    this.mountingResetTaps
  );
}
}
