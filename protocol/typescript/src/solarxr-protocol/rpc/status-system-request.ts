// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Request current statuses that we have
 */
export class StatusSystemRequest implements flatbuffers.IUnpackableObject<StatusSystemRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StatusSystemRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatusSystemRequest(bb:flatbuffers.ByteBuffer, obj?:StatusSystemRequest):StatusSystemRequest {
  return (obj || new StatusSystemRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatusSystemRequest(bb:flatbuffers.ByteBuffer, obj?:StatusSystemRequest):StatusSystemRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StatusSystemRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startStatusSystemRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endStatusSystemRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStatusSystemRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  StatusSystemRequest.startStatusSystemRequest(builder);
  return StatusSystemRequest.endStatusSystemRequest(builder);
}

unpack(): StatusSystemRequestT {
  return new StatusSystemRequestT();
}


unpackTo(_o: StatusSystemRequestT): void {}
}

export class StatusSystemRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StatusSystemRequest.createStatusSystemRequest(builder);
}
}
