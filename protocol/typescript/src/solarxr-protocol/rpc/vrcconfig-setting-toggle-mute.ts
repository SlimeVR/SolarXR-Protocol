// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class VRCConfigSettingToggleMute implements flatbuffers.IUnpackableObject<VRCConfigSettingToggleMuteT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):VRCConfigSettingToggleMute {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsVRCConfigSettingToggleMute(bb:flatbuffers.ByteBuffer, obj?:VRCConfigSettingToggleMute):VRCConfigSettingToggleMute {
  return (obj || new VRCConfigSettingToggleMute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsVRCConfigSettingToggleMute(bb:flatbuffers.ByteBuffer, obj?:VRCConfigSettingToggleMute):VRCConfigSettingToggleMute {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new VRCConfigSettingToggleMute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startVRCConfigSettingToggleMute(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
}

static endVRCConfigSettingToggleMute(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createVRCConfigSettingToggleMute(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset):flatbuffers.Offset {
  VRCConfigSettingToggleMute.startVRCConfigSettingToggleMute(builder);
  VRCConfigSettingToggleMute.addKey(builder, keyOffset);
  return VRCConfigSettingToggleMute.endVRCConfigSettingToggleMute(builder);
}

unpack(): VRCConfigSettingToggleMuteT {
  return new VRCConfigSettingToggleMuteT(
    this.key()
  );
}


unpackTo(_o: VRCConfigSettingToggleMuteT): void {
  _o.key = this.key();
}
}

export class VRCConfigSettingToggleMuteT implements flatbuffers.IGeneratedObject {
constructor(
  public key: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const key = (this.key !== null ? builder.createString(this.key!) : 0);

  return VRCConfigSettingToggleMute.createVRCConfigSettingToggleMute(builder,
    key
  );
}
}
