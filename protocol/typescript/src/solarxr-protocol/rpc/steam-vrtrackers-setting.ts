// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SteamVRTrackersSetting implements flatbuffers.IUnpackableObject<SteamVRTrackersSettingT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SteamVRTrackersSetting {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSteamVRTrackersSetting(bb:flatbuffers.ByteBuffer, obj?:SteamVRTrackersSetting):SteamVRTrackersSetting {
  return (obj || new SteamVRTrackersSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSteamVRTrackersSetting(bb:flatbuffers.ByteBuffer, obj?:SteamVRTrackersSetting):SteamVRTrackersSetting {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SteamVRTrackersSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

waist():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

chest():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

automaticTrackerToggle():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

leftFoot():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rightFoot():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

leftKnee():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rightKnee():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

leftElbow():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rightElbow():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

leftHand():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

rightHand():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startSteamVRTrackersSetting(builder:flatbuffers.Builder) {
  builder.startObject(15);
}

static addWaist(builder:flatbuffers.Builder, waist:boolean) {
  builder.addFieldInt8(0, +waist, +false);
}

static addChest(builder:flatbuffers.Builder, chest:boolean) {
  builder.addFieldInt8(1, +chest, +false);
}

static addAutomaticTrackerToggle(builder:flatbuffers.Builder, automaticTrackerToggle:boolean) {
  builder.addFieldInt8(6, +automaticTrackerToggle, +false);
}

static addLeftFoot(builder:flatbuffers.Builder, leftFoot:boolean) {
  builder.addFieldInt8(7, +leftFoot, +false);
}

static addRightFoot(builder:flatbuffers.Builder, rightFoot:boolean) {
  builder.addFieldInt8(8, +rightFoot, +false);
}

static addLeftKnee(builder:flatbuffers.Builder, leftKnee:boolean) {
  builder.addFieldInt8(9, +leftKnee, +false);
}

static addRightKnee(builder:flatbuffers.Builder, rightKnee:boolean) {
  builder.addFieldInt8(10, +rightKnee, +false);
}

static addLeftElbow(builder:flatbuffers.Builder, leftElbow:boolean) {
  builder.addFieldInt8(11, +leftElbow, +false);
}

static addRightElbow(builder:flatbuffers.Builder, rightElbow:boolean) {
  builder.addFieldInt8(12, +rightElbow, +false);
}

static addLeftHand(builder:flatbuffers.Builder, leftHand:boolean) {
  builder.addFieldInt8(13, +leftHand, +false);
}

static addRightHand(builder:flatbuffers.Builder, rightHand:boolean) {
  builder.addFieldInt8(14, +rightHand, +false);
}

static endSteamVRTrackersSetting(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSteamVRTrackersSetting(builder:flatbuffers.Builder, waist:boolean, chest:boolean, automaticTrackerToggle:boolean, leftFoot:boolean, rightFoot:boolean, leftKnee:boolean, rightKnee:boolean, leftElbow:boolean, rightElbow:boolean, leftHand:boolean, rightHand:boolean):flatbuffers.Offset {
  SteamVRTrackersSetting.startSteamVRTrackersSetting(builder);
  SteamVRTrackersSetting.addWaist(builder, waist);
  SteamVRTrackersSetting.addChest(builder, chest);
  SteamVRTrackersSetting.addAutomaticTrackerToggle(builder, automaticTrackerToggle);
  SteamVRTrackersSetting.addLeftFoot(builder, leftFoot);
  SteamVRTrackersSetting.addRightFoot(builder, rightFoot);
  SteamVRTrackersSetting.addLeftKnee(builder, leftKnee);
  SteamVRTrackersSetting.addRightKnee(builder, rightKnee);
  SteamVRTrackersSetting.addLeftElbow(builder, leftElbow);
  SteamVRTrackersSetting.addRightElbow(builder, rightElbow);
  SteamVRTrackersSetting.addLeftHand(builder, leftHand);
  SteamVRTrackersSetting.addRightHand(builder, rightHand);
  return SteamVRTrackersSetting.endSteamVRTrackersSetting(builder);
}

unpack(): SteamVRTrackersSettingT {
  return new SteamVRTrackersSettingT(
    this.waist(),
    this.chest(),
    this.automaticTrackerToggle(),
    this.leftFoot(),
    this.rightFoot(),
    this.leftKnee(),
    this.rightKnee(),
    this.leftElbow(),
    this.rightElbow(),
    this.leftHand(),
    this.rightHand()
  );
}


unpackTo(_o: SteamVRTrackersSettingT): void {
  _o.waist = this.waist();
  _o.chest = this.chest();
  _o.automaticTrackerToggle = this.automaticTrackerToggle();
  _o.leftFoot = this.leftFoot();
  _o.rightFoot = this.rightFoot();
  _o.leftKnee = this.leftKnee();
  _o.rightKnee = this.rightKnee();
  _o.leftElbow = this.leftElbow();
  _o.rightElbow = this.rightElbow();
  _o.leftHand = this.leftHand();
  _o.rightHand = this.rightHand();
}
}

export class SteamVRTrackersSettingT implements flatbuffers.IGeneratedObject {
constructor(
  public waist: boolean = false,
  public chest: boolean = false,
  public automaticTrackerToggle: boolean = false,
  public leftFoot: boolean = false,
  public rightFoot: boolean = false,
  public leftKnee: boolean = false,
  public rightKnee: boolean = false,
  public leftElbow: boolean = false,
  public rightElbow: boolean = false,
  public leftHand: boolean = false,
  public rightHand: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SteamVRTrackersSetting.createSteamVRTrackersSetting(builder,
    this.waist,
    this.chest,
    this.automaticTrackerToggle,
    this.leftFoot,
    this.rightFoot,
    this.leftKnee,
    this.rightKnee,
    this.leftElbow,
    this.rightElbow,
    this.leftHand,
    this.rightHand
  );
}
}
