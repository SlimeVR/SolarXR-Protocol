// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SteamVRTrackersSetting implements flatbuffers.IUnpackableObject<SteamVRTrackersSettingT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SteamVRTrackersSetting {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSteamVRTrackersSetting(bb:flatbuffers.ByteBuffer, obj?:SteamVRTrackersSetting):SteamVRTrackersSetting {
  return (obj || new SteamVRTrackersSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSteamVRTrackersSetting(bb:flatbuffers.ByteBuffer, obj?:SteamVRTrackersSetting):SteamVRTrackersSetting {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SteamVRTrackersSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

waist():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

chest():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

legs():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

knees():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

elbows():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startSteamVRTrackersSetting(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addWaist(builder:flatbuffers.Builder, waist:boolean) {
  builder.addFieldInt8(0, +waist, +false);
}

static addChest(builder:flatbuffers.Builder, chest:boolean) {
  builder.addFieldInt8(1, +chest, +false);
}

static addLegs(builder:flatbuffers.Builder, legs:boolean) {
  builder.addFieldInt8(2, +legs, +false);
}

static addKnees(builder:flatbuffers.Builder, knees:boolean) {
  builder.addFieldInt8(3, +knees, +false);
}

static addElbows(builder:flatbuffers.Builder, elbows:boolean) {
  builder.addFieldInt8(4, +elbows, +false);
}

static endSteamVRTrackersSetting(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSteamVRTrackersSetting(builder:flatbuffers.Builder, waist:boolean, chest:boolean, legs:boolean, knees:boolean, elbows:boolean):flatbuffers.Offset {
  SteamVRTrackersSetting.startSteamVRTrackersSetting(builder);
  SteamVRTrackersSetting.addWaist(builder, waist);
  SteamVRTrackersSetting.addChest(builder, chest);
  SteamVRTrackersSetting.addLegs(builder, legs);
  SteamVRTrackersSetting.addKnees(builder, knees);
  SteamVRTrackersSetting.addElbows(builder, elbows);
  return SteamVRTrackersSetting.endSteamVRTrackersSetting(builder);
}

unpack(): SteamVRTrackersSettingT {
  return new SteamVRTrackersSettingT(
    this.waist(),
    this.chest(),
    this.legs(),
    this.knees(),
    this.elbows()
  );
}


unpackTo(_o: SteamVRTrackersSettingT): void {
  _o.waist = this.waist();
  _o.chest = this.chest();
  _o.legs = this.legs();
  _o.knees = this.knees();
  _o.elbows = this.elbows();
}
}

export class SteamVRTrackersSettingT implements flatbuffers.IGeneratedObject {
constructor(
  public waist: boolean = false,
  public chest: boolean = false,
  public legs: boolean = false,
  public knees: boolean = false,
  public elbows: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SteamVRTrackersSetting.createSteamVRTrackersSetting(builder,
    this.waist,
    this.chest,
    this.legs,
    this.knees,
    this.elbows
  );
}
}
