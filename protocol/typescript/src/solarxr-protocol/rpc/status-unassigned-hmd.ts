// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * There is an available HMD tracker and it's not assigned to head
 */
export class StatusUnassignedHMD implements flatbuffers.IUnpackableObject<StatusUnassignedHMDT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StatusUnassignedHMD {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatusUnassignedHMD(bb:flatbuffers.ByteBuffer, obj?:StatusUnassignedHMD):StatusUnassignedHMD {
  return (obj || new StatusUnassignedHMD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatusUnassignedHMD(bb:flatbuffers.ByteBuffer, obj?:StatusUnassignedHMD):StatusUnassignedHMD {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StatusUnassignedHMD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startStatusUnassignedHMD(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endStatusUnassignedHMD(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStatusUnassignedHMD(builder:flatbuffers.Builder):flatbuffers.Offset {
  StatusUnassignedHMD.startStatusUnassignedHMD(builder);
  return StatusUnassignedHMD.endStatusUnassignedHMD(builder);
}

unpack(): StatusUnassignedHMDT {
  return new StatusUnassignedHMDT();
}


unpackTo(_o: StatusUnassignedHMDT): void {}
}

export class StatusUnassignedHMDT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return StatusUnassignedHMD.createStatusUnassignedHMD(builder);
}
}
