// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class YawCorrectionSettings implements flatbuffers.IUnpackableObject<YawCorrectionSettingsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):YawCorrectionSettings {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsYawCorrectionSettings(bb:flatbuffers.ByteBuffer, obj?:YawCorrectionSettings):YawCorrectionSettings {
  return (obj || new YawCorrectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsYawCorrectionSettings(bb:flatbuffers.ByteBuffer, obj?:YawCorrectionSettings):YawCorrectionSettings {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new YawCorrectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

amountInDegPerSec():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startYawCorrectionSettings(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addAmountInDegPerSec(builder:flatbuffers.Builder, amountInDegPerSec:number) {
  builder.addFieldFloat32(0, amountInDegPerSec, 0.0);
}

static endYawCorrectionSettings(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createYawCorrectionSettings(builder:flatbuffers.Builder, amountInDegPerSec:number):flatbuffers.Offset {
  YawCorrectionSettings.startYawCorrectionSettings(builder);
  YawCorrectionSettings.addAmountInDegPerSec(builder, amountInDegPerSec);
  return YawCorrectionSettings.endYawCorrectionSettings(builder);
}

unpack(): YawCorrectionSettingsT {
  return new YawCorrectionSettingsT(
    this.amountInDegPerSec()
  );
}


unpackTo(_o: YawCorrectionSettingsT): void {
  _o.amountInDegPerSec = this.amountInDegPerSec();
}
}

export class YawCorrectionSettingsT implements flatbuffers.IGeneratedObject {
constructor(
  public amountInDegPerSec: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return YawCorrectionSettings.createYawCorrectionSettings(builder,
    this.amountInDegPerSec
  );
}
}
