// automatically generated by the FlatBuffers compiler, do not modify

import { TrackingChecklistNeedCalibration, TrackingChecklistNeedCalibrationT } from '../../solarxr-protocol/rpc/tracking-checklist-need-calibration.js';
import { TrackingChecklistPublicNetworks, TrackingChecklistPublicNetworksT } from '../../solarxr-protocol/rpc/tracking-checklist-public-networks.js';
import { TrackingChecklistSteamVRDisconnected, TrackingChecklistSteamVRDisconnectedT } from '../../solarxr-protocol/rpc/tracking-checklist-steam-vrdisconnected.js';
import { TrackingChecklistTrackerError, TrackingChecklistTrackerErrorT } from '../../solarxr-protocol/rpc/tracking-checklist-tracker-error.js';
import { TrackingChecklistTrackerReset, TrackingChecklistTrackerResetT } from '../../solarxr-protocol/rpc/tracking-checklist-tracker-reset.js';
import { TrackingChecklistUnassignedHMD, TrackingChecklistUnassignedHMDT } from '../../solarxr-protocol/rpc/tracking-checklist-unassigned-hmd.js';


export enum TrackingChecklistExtraData {
  NONE = 0,
  TrackingChecklistTrackerReset = 1,
  TrackingChecklistTrackerError = 2,
  TrackingChecklistSteamVRDisconnected = 3,
  TrackingChecklistUnassignedHMD = 4,
  TrackingChecklistNeedCalibration = 5,
  TrackingChecklistPublicNetworks = 6
}

export function unionToTrackingChecklistExtraData(
  type: TrackingChecklistExtraData,
  accessor: (obj:TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD) => TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD|null
): TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD|null {
  switch(TrackingChecklistExtraData[type]) {
    case 'NONE': return null; 
    case 'TrackingChecklistTrackerReset': return accessor(new TrackingChecklistTrackerReset())! as TrackingChecklistTrackerReset;
    case 'TrackingChecklistTrackerError': return accessor(new TrackingChecklistTrackerError())! as TrackingChecklistTrackerError;
    case 'TrackingChecklistSteamVRDisconnected': return accessor(new TrackingChecklistSteamVRDisconnected())! as TrackingChecklistSteamVRDisconnected;
    case 'TrackingChecklistUnassignedHMD': return accessor(new TrackingChecklistUnassignedHMD())! as TrackingChecklistUnassignedHMD;
    case 'TrackingChecklistNeedCalibration': return accessor(new TrackingChecklistNeedCalibration())! as TrackingChecklistNeedCalibration;
    case 'TrackingChecklistPublicNetworks': return accessor(new TrackingChecklistPublicNetworks())! as TrackingChecklistPublicNetworks;
    default: return null;
  }
}

export function unionListToTrackingChecklistExtraData(
  type: TrackingChecklistExtraData, 
  accessor: (index: number, obj:TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD) => TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD|null, 
  index: number
): TrackingChecklistNeedCalibration|TrackingChecklistPublicNetworks|TrackingChecklistSteamVRDisconnected|TrackingChecklistTrackerError|TrackingChecklistTrackerReset|TrackingChecklistUnassignedHMD|null {
  switch(TrackingChecklistExtraData[type]) {
    case 'NONE': return null; 
    case 'TrackingChecklistTrackerReset': return accessor(index, new TrackingChecklistTrackerReset())! as TrackingChecklistTrackerReset;
    case 'TrackingChecklistTrackerError': return accessor(index, new TrackingChecklistTrackerError())! as TrackingChecklistTrackerError;
    case 'TrackingChecklistSteamVRDisconnected': return accessor(index, new TrackingChecklistSteamVRDisconnected())! as TrackingChecklistSteamVRDisconnected;
    case 'TrackingChecklistUnassignedHMD': return accessor(index, new TrackingChecklistUnassignedHMD())! as TrackingChecklistUnassignedHMD;
    case 'TrackingChecklistNeedCalibration': return accessor(index, new TrackingChecklistNeedCalibration())! as TrackingChecklistNeedCalibration;
    case 'TrackingChecklistPublicNetworks': return accessor(index, new TrackingChecklistPublicNetworks())! as TrackingChecklistPublicNetworks;
    default: return null;
  }
}
