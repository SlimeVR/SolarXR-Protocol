// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { TrackerId, TrackerIdT } from '../../solarxr-protocol/datatypes/tracker-id.js';


export class TrackingChecklistUnassignedHMD implements flatbuffers.IUnpackableObject<TrackingChecklistUnassignedHMDT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TrackingChecklistUnassignedHMD {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTrackingChecklistUnassignedHMD(bb:flatbuffers.ByteBuffer, obj?:TrackingChecklistUnassignedHMD):TrackingChecklistUnassignedHMD {
  return (obj || new TrackingChecklistUnassignedHMD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTrackingChecklistUnassignedHMD(bb:flatbuffers.ByteBuffer, obj?:TrackingChecklistUnassignedHMD):TrackingChecklistUnassignedHMD {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TrackingChecklistUnassignedHMD()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

trackerId(obj?:TrackerId):TrackerId|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TrackerId()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startTrackingChecklistUnassignedHMD(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTrackerId(builder:flatbuffers.Builder, trackerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, trackerIdOffset, 0);
}

static endTrackingChecklistUnassignedHMD(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTrackingChecklistUnassignedHMD(builder:flatbuffers.Builder, trackerIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  TrackingChecklistUnassignedHMD.startTrackingChecklistUnassignedHMD(builder);
  TrackingChecklistUnassignedHMD.addTrackerId(builder, trackerIdOffset);
  return TrackingChecklistUnassignedHMD.endTrackingChecklistUnassignedHMD(builder);
}

unpack(): TrackingChecklistUnassignedHMDT {
  return new TrackingChecklistUnassignedHMDT(
    (this.trackerId() !== null ? this.trackerId()!.unpack() : null)
  );
}


unpackTo(_o: TrackingChecklistUnassignedHMDT): void {
  _o.trackerId = (this.trackerId() !== null ? this.trackerId()!.unpack() : null);
}
}

export class TrackingChecklistUnassignedHMDT implements flatbuffers.IGeneratedObject {
constructor(
  public trackerId: TrackerIdT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const trackerId = (this.trackerId !== null ? this.trackerId!.pack(builder) : 0);

  return TrackingChecklistUnassignedHMD.createTrackingChecklistUnassignedHMD(builder,
    trackerId
  );
}
}
