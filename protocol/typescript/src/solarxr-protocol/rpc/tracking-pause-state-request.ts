// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Requests the current state of tracking pause
 */
export class TrackingPauseStateRequest implements flatbuffers.IUnpackableObject<TrackingPauseStateRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TrackingPauseStateRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTrackingPauseStateRequest(bb:flatbuffers.ByteBuffer, obj?:TrackingPauseStateRequest):TrackingPauseStateRequest {
  return (obj || new TrackingPauseStateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTrackingPauseStateRequest(bb:flatbuffers.ByteBuffer, obj?:TrackingPauseStateRequest):TrackingPauseStateRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TrackingPauseStateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startTrackingPauseStateRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endTrackingPauseStateRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTrackingPauseStateRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  TrackingPauseStateRequest.startTrackingPauseStateRequest(builder);
  return TrackingPauseStateRequest.endTrackingPauseStateRequest(builder);
}

unpack(): TrackingPauseStateRequestT {
  return new TrackingPauseStateRequestT();
}


unpackTo(_o: TrackingPauseStateRequestT): void {}
}

export class TrackingPauseStateRequestT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return TrackingPauseStateRequest.createTrackingPauseStateRequest(builder);
}
}
