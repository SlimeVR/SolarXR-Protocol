// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { StayAlignedRelaxedPose } from '../../solarxr-protocol/rpc/stay-aligned-relaxed-pose.js';


export class DetectStayAlignedRelaxedPoseRequest implements flatbuffers.IUnpackableObject<DetectStayAlignedRelaxedPoseRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DetectStayAlignedRelaxedPoseRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDetectStayAlignedRelaxedPoseRequest(bb:flatbuffers.ByteBuffer, obj?:DetectStayAlignedRelaxedPoseRequest):DetectStayAlignedRelaxedPoseRequest {
  return (obj || new DetectStayAlignedRelaxedPoseRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDetectStayAlignedRelaxedPoseRequest(bb:flatbuffers.ByteBuffer, obj?:DetectStayAlignedRelaxedPoseRequest):DetectStayAlignedRelaxedPoseRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DetectStayAlignedRelaxedPoseRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

pose():StayAlignedRelaxedPose {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : StayAlignedRelaxedPose.STANDING;
}

static startDetectStayAlignedRelaxedPoseRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPose(builder:flatbuffers.Builder, pose:StayAlignedRelaxedPose) {
  builder.addFieldInt8(0, pose, StayAlignedRelaxedPose.STANDING);
}

static endDetectStayAlignedRelaxedPoseRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDetectStayAlignedRelaxedPoseRequest(builder:flatbuffers.Builder, pose:StayAlignedRelaxedPose):flatbuffers.Offset {
  DetectStayAlignedRelaxedPoseRequest.startDetectStayAlignedRelaxedPoseRequest(builder);
  DetectStayAlignedRelaxedPoseRequest.addPose(builder, pose);
  return DetectStayAlignedRelaxedPoseRequest.endDetectStayAlignedRelaxedPoseRequest(builder);
}

unpack(): DetectStayAlignedRelaxedPoseRequestT {
  return new DetectStayAlignedRelaxedPoseRequestT(
    this.pose()
  );
}


unpackTo(_o: DetectStayAlignedRelaxedPoseRequestT): void {
  _o.pose = this.pose();
}
}

export class DetectStayAlignedRelaxedPoseRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public pose: StayAlignedRelaxedPose = StayAlignedRelaxedPose.STANDING
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return DetectStayAlignedRelaxedPoseRequest.createDetectStayAlignedRelaxedPoseRequest(builder,
    this.pose
  );
}
}
