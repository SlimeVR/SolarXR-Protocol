// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class TrackingPauseStateResponse implements flatbuffers.IUnpackableObject<TrackingPauseStateResponseT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TrackingPauseStateResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTrackingPauseStateResponse(bb:flatbuffers.ByteBuffer, obj?:TrackingPauseStateResponse):TrackingPauseStateResponse {
  return (obj || new TrackingPauseStateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTrackingPauseStateResponse(bb:flatbuffers.ByteBuffer, obj?:TrackingPauseStateResponse):TrackingPauseStateResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TrackingPauseStateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * Skeleton tracking is paused if true, skeleton tracking is unpaused if false.
 */
trackingPaused():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startTrackingPauseStateResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTrackingPaused(builder:flatbuffers.Builder, trackingPaused:boolean) {
  builder.addFieldInt8(0, +trackingPaused, +false);
}

static endTrackingPauseStateResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTrackingPauseStateResponse(builder:flatbuffers.Builder, trackingPaused:boolean):flatbuffers.Offset {
  TrackingPauseStateResponse.startTrackingPauseStateResponse(builder);
  TrackingPauseStateResponse.addTrackingPaused(builder, trackingPaused);
  return TrackingPauseStateResponse.endTrackingPauseStateResponse(builder);
}

unpack(): TrackingPauseStateResponseT {
  return new TrackingPauseStateResponseT(
    this.trackingPaused()
  );
}


unpackTo(_o: TrackingPauseStateResponseT): void {
  _o.trackingPaused = this.trackingPaused();
}
}

export class TrackingPauseStateResponseT implements flatbuffers.IGeneratedObject {
constructor(
  public trackingPaused: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return TrackingPauseStateResponse.createTrackingPauseStateResponse(builder,
    this.trackingPaused
  );
}
}
