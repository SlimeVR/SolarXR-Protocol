// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Sends the GET INFO cmd to the current tracker on the serial monitor
 */
export class SerialTrackerGetInfoRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):SerialTrackerGetInfoRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSerialTrackerGetInfoRequest(bb:flatbuffers.ByteBuffer, obj?:SerialTrackerGetInfoRequest):SerialTrackerGetInfoRequest {
  return (obj || new SerialTrackerGetInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSerialTrackerGetInfoRequest(bb:flatbuffers.ByteBuffer, obj?:SerialTrackerGetInfoRequest):SerialTrackerGetInfoRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SerialTrackerGetInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startSerialTrackerGetInfoRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSerialTrackerGetInfoRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSerialTrackerGetInfoRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  SerialTrackerGetInfoRequest.startSerialTrackerGetInfoRequest(builder);
  return SerialTrackerGetInfoRequest.endSerialTrackerGetInfoRequest(builder);
}

unpack(): SerialTrackerGetInfoRequestT {
  return new SerialTrackerGetInfoRequestT();
}


unpackTo(_o: SerialTrackerGetInfoRequestT): void {}
}

export class SerialTrackerGetInfoRequestT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SerialTrackerGetInfoRequest.createSerialTrackerGetInfoRequest(builder);
}
}
