/// This file contains all messages related to the RPC system. Unlike the data feed
/// system, the RPC system is focused on providing a reliable RPC communication pattern.
///
/// It can be used either for sending commands to mutate state, or reliably sending
/// evented updates of data that should be guaranteed to be observed, such as a user
/// initiated button push.

include "datatypes/datatypes.fbs";

namespace slimevr_protocol.rpc;

/// Heartbeats should simply be acknowledged
//
// TODO: Is this even necessary? This behavior can be accomplished by simply
// setting `acknowledge_me` to `true` in any other packet
table HeartbeatRequest {}

table ResetRequest {
    quick: bool;
}


table AssignTrackerRequest {
    id: uint8;
    body_position: slimevr_protocol.datatypes.TrackerPosition;
    mounting_rotation: uint16;
}

// ---- Settings ----

table SettingsRequest {}

table SettingsResponse {
	steam_vr_trackers: SteamVRTrackersSetting;
	filtering: FilteringSettings;
}

table ChangeSettingsRequest {
    steam_vr_trackers: SteamVRTrackersSetting;
    filtering: FilteringSettings;
}

table SteamVRTrackersSetting {
    waist: bool;
    chest: bool;
    legs: bool;
    knees: bool;
    elbows: bool;
}

table FilteringSettings {
	type: slimevr_protocol.datatypes.FilteringType;
	intensity: uint8;
	ticks: uint8;
}
