// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.pub_sub;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Response for `TopicHandleRequest`
 */
@SuppressWarnings("unused")
public final class TopicHandleResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static TopicHandleResponse getRootAsTopicHandleResponse(ByteBuffer _bb) { return getRootAsTopicHandleResponse(_bb, new TopicHandleResponse()); }
  public static TopicHandleResponse getRootAsTopicHandleResponse(ByteBuffer _bb, TopicHandleResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TopicHandleResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.pub_sub.TopicHandle handle() { return handle(new solarxr_protocol.pub_sub.TopicHandle()); }
  public solarxr_protocol.pub_sub.TopicHandle handle(solarxr_protocol.pub_sub.TopicHandle obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createTopicHandleResponse(FlatBufferBuilder builder,
      int handleOffset) {
    builder.startTable(1);
    TopicHandleResponse.addHandle(builder, handleOffset);
    return TopicHandleResponse.endTopicHandleResponse(builder);
  }

  public static void startTopicHandleResponse(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addHandle(FlatBufferBuilder builder, int handleOffset) { builder.addOffset(0, handleOffset, 0); }
  public static int endTopicHandleResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TopicHandleResponse get(int j) { return get(new TopicHandleResponse(), j); }
    public TopicHandleResponse get(TopicHandleResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public TopicHandleResponseT unpack() {
    TopicHandleResponseT _o = new TopicHandleResponseT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(TopicHandleResponseT _o) {
    if (handle() != null) _o.setHandle(handle().unpack());
    else _o.setHandle(null);
  }
  public static int pack(FlatBufferBuilder builder, TopicHandleResponseT _o) {
    if (_o == null) return 0;
    int _handle = _o.getHandle() == null ? 0 : solarxr_protocol.pub_sub.TopicHandle.pack(builder, _o.getHandle());
    return createTopicHandleResponse(
      builder,
      _handle);
  }
}

