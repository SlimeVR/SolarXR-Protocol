// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.pub_sub;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Data that is sent from publishers to subscribers
 */
@SuppressWarnings("unused")
public final class Message extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static Message getRootAsMessage(ByteBuffer _bb) { return getRootAsMessage(_bb, new Message()); }
  public static Message getRootAsMessage(ByteBuffer _bb, Message obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte topicType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table topic(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }
  public byte payloadType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table payload(Table obj) { int o = __offset(10); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createMessage(FlatBufferBuilder builder,
      byte topicType,
      int topicOffset,
      byte payloadType,
      int payloadOffset) {
    builder.startTable(4);
    Message.addPayload(builder, payloadOffset);
    Message.addTopic(builder, topicOffset);
    Message.addPayloadType(builder, payloadType);
    Message.addTopicType(builder, topicType);
    return Message.endMessage(builder);
  }

  public static void startMessage(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addTopicType(FlatBufferBuilder builder, byte topicType) { builder.addByte(0, topicType, 0); }
  public static void addTopic(FlatBufferBuilder builder, int topicOffset) { builder.addOffset(1, topicOffset, 0); }
  public static void addPayloadType(FlatBufferBuilder builder, byte payloadType) { builder.addByte(2, payloadType, 0); }
  public static void addPayload(FlatBufferBuilder builder, int payloadOffset) { builder.addOffset(3, payloadOffset, 0); }
  public static int endMessage(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Message get(int j) { return get(new Message(), j); }
    public Message get(Message obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public MessageT unpack() {
    MessageT _o = new MessageT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(MessageT _o) {
    solarxr_protocol.pub_sub.TopicUnion _oTopic = new solarxr_protocol.pub_sub.TopicUnion();
    byte _oTopicType = topicType();
    _oTopic.setType(_oTopicType);
    Table _oTopicValue;
    switch (_oTopicType) {
      case solarxr_protocol.pub_sub.Topic.TopicHandle:
        _oTopicValue = topic(new solarxr_protocol.pub_sub.TopicHandle());
        _oTopic.setValue(_oTopicValue != null ? ((solarxr_protocol.pub_sub.TopicHandle) _oTopicValue).unpack() : null);
        break;
      case solarxr_protocol.pub_sub.Topic.TopicId:
        _oTopicValue = topic(new solarxr_protocol.pub_sub.TopicId());
        _oTopic.setValue(_oTopicValue != null ? ((solarxr_protocol.pub_sub.TopicId) _oTopicValue).unpack() : null);
        break;
      default: break;
    }
    _o.setTopic(_oTopic);
    solarxr_protocol.pub_sub.PayloadUnion _oPayload = new solarxr_protocol.pub_sub.PayloadUnion();
    byte _oPayloadType = payloadType();
    _oPayload.setType(_oPayloadType);
    Table _oPayloadValue;
    switch (_oPayloadType) {
      case solarxr_protocol.pub_sub.Payload.solarxr_protocol_datatypes_StringTable:
        _oPayloadValue = payload(new solarxr_protocol.datatypes.StringTable());
        _oPayload.setValue(_oPayloadValue != null ? ((solarxr_protocol.datatypes.StringTable) _oPayloadValue).unpack() : null);
        break;
      case solarxr_protocol.pub_sub.Payload.solarxr_protocol_datatypes_Bytes:
        _oPayloadValue = payload(new solarxr_protocol.datatypes.Bytes());
        _oPayload.setValue(_oPayloadValue != null ? ((solarxr_protocol.datatypes.Bytes) _oPayloadValue).unpack() : null);
        break;
      case solarxr_protocol.pub_sub.Payload.KeyValues:
        _oPayloadValue = payload(new solarxr_protocol.pub_sub.KeyValues());
        _oPayload.setValue(_oPayloadValue != null ? ((solarxr_protocol.pub_sub.KeyValues) _oPayloadValue).unpack() : null);
        break;
      default: break;
    }
    _o.setPayload(_oPayload);
  }
  public static int pack(FlatBufferBuilder builder, MessageT _o) {
    if (_o == null) return 0;
    byte _topicType = _o.getTopic() == null ? solarxr_protocol.pub_sub.Topic.NONE : _o.getTopic().getType();
    int _topic = _o.getTopic() == null ? 0 : solarxr_protocol.pub_sub.TopicUnion.pack(builder, _o.getTopic());
    byte _payloadType = _o.getPayload() == null ? solarxr_protocol.pub_sub.Payload.NONE : _o.getPayload().getType();
    int _payload = _o.getPayload() == null ? 0 : solarxr_protocol.pub_sub.PayloadUnion.pack(builder, _o.getPayload());
    return createMessage(
      builder,
      _topicType,
      _topic,
      _payloadType,
      _payload);
  }
}

