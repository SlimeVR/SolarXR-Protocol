// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class IgnoreTrackingChecklistStepRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static IgnoreTrackingChecklistStepRequest getRootAsIgnoreTrackingChecklistStepRequest(ByteBuffer _bb) { return getRootAsIgnoreTrackingChecklistStepRequest(_bb, new IgnoreTrackingChecklistStepRequest()); }
  public static IgnoreTrackingChecklistStepRequest getRootAsIgnoreTrackingChecklistStepRequest(ByteBuffer _bb, IgnoreTrackingChecklistStepRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IgnoreTrackingChecklistStepRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int stepId() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean ignore() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createIgnoreTrackingChecklistStepRequest(FlatBufferBuilder builder,
      int stepId,
      boolean ignore) {
    builder.startTable(2);
    IgnoreTrackingChecklistStepRequest.addIgnore(builder, ignore);
    IgnoreTrackingChecklistStepRequest.addStepId(builder, stepId);
    return IgnoreTrackingChecklistStepRequest.endIgnoreTrackingChecklistStepRequest(builder);
  }

  public static void startIgnoreTrackingChecklistStepRequest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addStepId(FlatBufferBuilder builder, int stepId) { builder.addByte(0, (byte) stepId, (byte) 0); }
  public static void addIgnore(FlatBufferBuilder builder, boolean ignore) { builder.addBoolean(1, ignore, false); }
  public static int endIgnoreTrackingChecklistStepRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IgnoreTrackingChecklistStepRequest get(int j) { return get(new IgnoreTrackingChecklistStepRequest(), j); }
    public IgnoreTrackingChecklistStepRequest get(IgnoreTrackingChecklistStepRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public IgnoreTrackingChecklistStepRequestT unpack() {
    IgnoreTrackingChecklistStepRequestT _o = new IgnoreTrackingChecklistStepRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(IgnoreTrackingChecklistStepRequestT _o) {
    int _oStepId = stepId();
    _o.setStepId(_oStepId);
    boolean _oIgnore = ignore();
    _o.setIgnore(_oIgnore);
  }
  public static int pack(FlatBufferBuilder builder, IgnoreTrackingChecklistStepRequestT _o) {
    if (_o == null) return 0;
    return createIgnoreTrackingChecklistStepRequest(
      builder,
      _o.getStepId(),
      _o.getIgnore());
  }
}

