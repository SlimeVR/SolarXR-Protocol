// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class NewSerialDeviceResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static NewSerialDeviceResponse getRootAsNewSerialDeviceResponse(ByteBuffer _bb) { return getRootAsNewSerialDeviceResponse(_bb, new NewSerialDeviceResponse()); }
  public static NewSerialDeviceResponse getRootAsNewSerialDeviceResponse(ByteBuffer _bb, NewSerialDeviceResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public NewSerialDeviceResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.SerialDevice device() { return device(new solarxr_protocol.rpc.SerialDevice()); }
  public solarxr_protocol.rpc.SerialDevice device(solarxr_protocol.rpc.SerialDevice obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createNewSerialDeviceResponse(FlatBufferBuilder builder,
      int deviceOffset) {
    builder.startTable(1);
    NewSerialDeviceResponse.addDevice(builder, deviceOffset);
    return NewSerialDeviceResponse.endNewSerialDeviceResponse(builder);
  }

  public static void startNewSerialDeviceResponse(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addDevice(FlatBufferBuilder builder, int deviceOffset) { builder.addOffset(0, deviceOffset, 0); }
  public static int endNewSerialDeviceResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public NewSerialDeviceResponse get(int j) { return get(new NewSerialDeviceResponse(), j); }
    public NewSerialDeviceResponse get(NewSerialDeviceResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public NewSerialDeviceResponseT unpack() {
    NewSerialDeviceResponseT _o = new NewSerialDeviceResponseT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(NewSerialDeviceResponseT _o) {
    if (device() != null) _o.setDevice(device().unpack());
    else _o.setDevice(null);
  }
  public static int pack(FlatBufferBuilder builder, NewSerialDeviceResponseT _o) {
    if (_o == null) return 0;
    int _device = _o.getDevice() == null ? 0 : solarxr_protocol.rpc.SerialDevice.pack(builder, _o.getDevice());
    return createNewSerialDeviceResponse(
      builder,
      _device);
  }
}

