// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * See TapDetectionSettings::setup_mode
 */
@SuppressWarnings("unused")
public final class TapDetectionSetupNotification extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static TapDetectionSetupNotification getRootAsTapDetectionSetupNotification(ByteBuffer _bb) { return getRootAsTapDetectionSetupNotification(_bb, new TapDetectionSetupNotification()); }
  public static TapDetectionSetupNotification getRootAsTapDetectionSetupNotification(ByteBuffer _bb, TapDetectionSetupNotification obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TapDetectionSetupNotification __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.datatypes.TrackerId trackerId() { return trackerId(new solarxr_protocol.datatypes.TrackerId()); }
  public solarxr_protocol.datatypes.TrackerId trackerId(solarxr_protocol.datatypes.TrackerId obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createTapDetectionSetupNotification(FlatBufferBuilder builder,
      int trackerIdOffset) {
    builder.startTable(1);
    TapDetectionSetupNotification.addTrackerId(builder, trackerIdOffset);
    return TapDetectionSetupNotification.endTapDetectionSetupNotification(builder);
  }

  public static void startTapDetectionSetupNotification(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addTrackerId(FlatBufferBuilder builder, int trackerIdOffset) { builder.addOffset(0, trackerIdOffset, 0); }
  public static int endTapDetectionSetupNotification(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TapDetectionSetupNotification get(int j) { return get(new TapDetectionSetupNotification(), j); }
    public TapDetectionSetupNotification get(TapDetectionSetupNotification obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public TapDetectionSetupNotificationT unpack() {
    TapDetectionSetupNotificationT _o = new TapDetectionSetupNotificationT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(TapDetectionSetupNotificationT _o) {
    if (trackerId() != null) _o.setTrackerId(trackerId().unpack());
    else _o.setTrackerId(null);
  }
  public static int pack(FlatBufferBuilder builder, TapDetectionSetupNotificationT _o) {
    if (_o == null) return 0;
    int _trackerId = _o.getTrackerId() == null ? 0 : solarxr_protocol.datatypes.TrackerId.pack(builder, _o.getTrackerId());
    return createTapDetectionSetupNotification(
      builder,
      _trackerId);
  }
}

