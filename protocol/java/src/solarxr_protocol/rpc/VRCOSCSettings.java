// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * OSC Settings specific to VRChat
 */
@SuppressWarnings("unused")
public final class VRCOSCSettings extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static VRCOSCSettings getRootAsVRCOSCSettings(ByteBuffer _bb) { return getRootAsVRCOSCSettings(_bb, new VRCOSCSettings()); }
  public static VRCOSCSettings getRootAsVRCOSCSettings(ByteBuffer _bb, VRCOSCSettings obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public VRCOSCSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.OSCSettings oscSettings() { return oscSettings(new solarxr_protocol.rpc.OSCSettings()); }
  public solarxr_protocol.rpc.OSCSettings oscSettings(solarxr_protocol.rpc.OSCSettings obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public solarxr_protocol.rpc.OSCTrackersSetting trackers() { return trackers(new solarxr_protocol.rpc.OSCTrackersSetting()); }
  public solarxr_protocol.rpc.OSCTrackersSetting trackers(solarxr_protocol.rpc.OSCTrackersSetting obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createVRCOSCSettings(FlatBufferBuilder builder,
      int oscSettingsOffset,
      int trackersOffset) {
    builder.startTable(2);
    VRCOSCSettings.addTrackers(builder, trackersOffset);
    VRCOSCSettings.addOscSettings(builder, oscSettingsOffset);
    return VRCOSCSettings.endVRCOSCSettings(builder);
  }

  public static void startVRCOSCSettings(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addOscSettings(FlatBufferBuilder builder, int oscSettingsOffset) { builder.addOffset(0, oscSettingsOffset, 0); }
  public static void addTrackers(FlatBufferBuilder builder, int trackersOffset) { builder.addOffset(1, trackersOffset, 0); }
  public static int endVRCOSCSettings(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public VRCOSCSettings get(int j) { return get(new VRCOSCSettings(), j); }
    public VRCOSCSettings get(VRCOSCSettings obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public VRCOSCSettingsT unpack() {
    VRCOSCSettingsT _o = new VRCOSCSettingsT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(VRCOSCSettingsT _o) {
    if (oscSettings() != null) _o.setOscSettings(oscSettings().unpack());
    else _o.setOscSettings(null);
    if (trackers() != null) _o.setTrackers(trackers().unpack());
    else _o.setTrackers(null);
  }
  public static int pack(FlatBufferBuilder builder, VRCOSCSettingsT _o) {
    if (_o == null) return 0;
    int _oscSettings = _o.getOscSettings() == null ? 0 : solarxr_protocol.rpc.OSCSettings.pack(builder, _o.getOscSettings());
    int _trackers = _o.getTrackers() == null ? 0 : solarxr_protocol.rpc.OSCTrackersSetting.pack(builder, _o.getTrackers());
    return createVRCOSCSettings(
      builder,
      _oscSettings,
      _trackers);
  }
}

