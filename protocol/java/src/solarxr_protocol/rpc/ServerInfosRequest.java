// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Allows to ask generic infos about the server,
 * like the local ip address, the version of the server, the java version,
 * the current working dir and other informations we might want to show in the gui
 * for information/debug purposes
 */
@SuppressWarnings("unused")
public final class ServerInfosRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static ServerInfosRequest getRootAsServerInfosRequest(ByteBuffer _bb) { return getRootAsServerInfosRequest(_bb, new ServerInfosRequest()); }
  public static ServerInfosRequest getRootAsServerInfosRequest(ByteBuffer _bb, ServerInfosRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ServerInfosRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void startServerInfosRequest(FlatBufferBuilder builder) { builder.startTable(0); }
  public static int endServerInfosRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ServerInfosRequest get(int j) { return get(new ServerInfosRequest(), j); }
    public ServerInfosRequest get(ServerInfosRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public ServerInfosRequestT unpack() {
    ServerInfosRequestT _o = new ServerInfosRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(ServerInfosRequestT _o) {
  }
  public static int pack(FlatBufferBuilder builder, ServerInfosRequestT _o) {
    if (_o == null) return 0;
    startServerInfosRequest(builder);
    return endServerInfosRequest(builder);
  }
}

