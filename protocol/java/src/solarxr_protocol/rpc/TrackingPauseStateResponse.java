// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TrackingPauseStateResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static TrackingPauseStateResponse getRootAsTrackingPauseStateResponse(ByteBuffer _bb) { return getRootAsTrackingPauseStateResponse(_bb, new TrackingPauseStateResponse()); }
  public static TrackingPauseStateResponse getRootAsTrackingPauseStateResponse(ByteBuffer _bb, TrackingPauseStateResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TrackingPauseStateResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Skeleton tracking is paused if true, skeleton tracking is unpaused if false.
   */
  public boolean trackingPaused() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createTrackingPauseStateResponse(FlatBufferBuilder builder,
      boolean trackingPaused) {
    builder.startTable(1);
    TrackingPauseStateResponse.addTrackingPaused(builder, trackingPaused);
    return TrackingPauseStateResponse.endTrackingPauseStateResponse(builder);
  }

  public static void startTrackingPauseStateResponse(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addTrackingPaused(FlatBufferBuilder builder, boolean trackingPaused) { builder.addBoolean(0, trackingPaused, false); }
  public static int endTrackingPauseStateResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TrackingPauseStateResponse get(int j) { return get(new TrackingPauseStateResponse(), j); }
    public TrackingPauseStateResponse get(TrackingPauseStateResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public TrackingPauseStateResponseT unpack() {
    TrackingPauseStateResponseT _o = new TrackingPauseStateResponseT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(TrackingPauseStateResponseT _o) {
    boolean _oTrackingPaused = trackingPaused();
    _o.setTrackingPaused(_oTrackingPaused);
  }
  public static int pack(FlatBufferBuilder builder, TrackingPauseStateResponseT _o) {
    if (_o == null) return 0;
    return createTrackingPauseStateResponse(
      builder,
      _o.getTrackingPaused());
  }
}

