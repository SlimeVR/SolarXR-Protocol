// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FirmwareUpdateRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static FirmwareUpdateRequest getRootAsFirmwareUpdateRequest(ByteBuffer _bb) { return getRootAsFirmwareUpdateRequest(_bb, new FirmwareUpdateRequest()); }
  public static FirmwareUpdateRequest getRootAsFirmwareUpdateRequest(ByteBuffer _bb, FirmwareUpdateRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FirmwareUpdateRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte methodType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table method(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createFirmwareUpdateRequest(FlatBufferBuilder builder,
      byte methodType,
      int methodOffset) {
    builder.startTable(2);
    FirmwareUpdateRequest.addMethod(builder, methodOffset);
    FirmwareUpdateRequest.addMethodType(builder, methodType);
    return FirmwareUpdateRequest.endFirmwareUpdateRequest(builder);
  }

  public static void startFirmwareUpdateRequest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addMethodType(FlatBufferBuilder builder, byte methodType) { builder.addByte(0, methodType, 0); }
  public static void addMethod(FlatBufferBuilder builder, int methodOffset) { builder.addOffset(1, methodOffset, 0); }
  public static int endFirmwareUpdateRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FirmwareUpdateRequest get(int j) { return get(new FirmwareUpdateRequest(), j); }
    public FirmwareUpdateRequest get(FirmwareUpdateRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public FirmwareUpdateRequestT unpack() {
    FirmwareUpdateRequestT _o = new FirmwareUpdateRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(FirmwareUpdateRequestT _o) {
    solarxr_protocol.rpc.FirmwareUpdateMethodUnion _oMethod = new solarxr_protocol.rpc.FirmwareUpdateMethodUnion();
    byte _oMethodType = methodType();
    _oMethod.setType(_oMethodType);
    Table _oMethodValue;
    switch (_oMethodType) {
      case solarxr_protocol.rpc.FirmwareUpdateMethod.OTAFirmwareUpdate:
        _oMethodValue = method(new solarxr_protocol.rpc.OTAFirmwareUpdate());
        _oMethod.setValue(_oMethodValue != null ? ((solarxr_protocol.rpc.OTAFirmwareUpdate) _oMethodValue).unpack() : null);
        break;
      case solarxr_protocol.rpc.FirmwareUpdateMethod.SerialFirmwareUpdate:
        _oMethodValue = method(new solarxr_protocol.rpc.SerialFirmwareUpdate());
        _oMethod.setValue(_oMethodValue != null ? ((solarxr_protocol.rpc.SerialFirmwareUpdate) _oMethodValue).unpack() : null);
        break;
      default: break;
    }
    _o.setMethod(_oMethod);
  }
  public static int pack(FlatBufferBuilder builder, FirmwareUpdateRequestT _o) {
    if (_o == null) return 0;
    byte _methodType = _o.getMethod() == null ? solarxr_protocol.rpc.FirmwareUpdateMethod.NONE : _o.getMethod().getType();
    int _method = _o.getMethod() == null ? 0 : solarxr_protocol.rpc.FirmwareUpdateMethodUnion.pack(builder, _o.getMethod());
    return createFirmwareUpdateRequest(
      builder,
      _methodType,
      _method);
  }
}

