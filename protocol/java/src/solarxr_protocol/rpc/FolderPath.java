// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FolderPath extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static FolderPath getRootAsFolderPath(ByteBuffer _bb) { return getRootAsFolderPath(_bb, new FolderPath()); }
  public static FolderPath getRootAsFolderPath(ByteBuffer _bb, FolderPath obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FolderPath __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String value() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer valueAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer valueInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createFolderPath(FlatBufferBuilder builder,
      int valueOffset) {
    builder.startTable(1);
    FolderPath.addValue(builder, valueOffset);
    return FolderPath.endFolderPath(builder);
  }

  public static void startFolderPath(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(0, valueOffset, 0); }
  public static int endFolderPath(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FolderPath get(int j) { return get(new FolderPath(), j); }
    public FolderPath get(FolderPath obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public FolderPathT unpack() {
    FolderPathT _o = new FolderPathT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(FolderPathT _o) {
    String _oValue = value();
    _o.setValue(_oValue);
  }
  public static int pack(FlatBufferBuilder builder, FolderPathT _o) {
    if (_o == null) return 0;
    int _value = _o.getValue() == null ? 0 : builder.createString(_o.getValue());
    return createFolderPath(
      builder,
      _value);
  }
}

