// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FkSkeletonValue extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static FkSkeletonValue getRootAsFkSkeletonValue(ByteBuffer _bb) { return getRootAsFkSkeletonValue(_bb, new FkSkeletonValue()); }
  public static FkSkeletonValue getRootAsFkSkeletonValue(ByteBuffer _bb, FkSkeletonValue obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FkSkeletonValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int skeletonValue() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public float value() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createFkSkeletonValue(FlatBufferBuilder builder,
      int skeletonValue,
      float value) {
    builder.startTable(2);
    FkSkeletonValue.addValue(builder, value);
    FkSkeletonValue.addSkeletonValue(builder, skeletonValue);
    return FkSkeletonValue.endFkSkeletonValue(builder);
  }

  public static void startFkSkeletonValue(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addSkeletonValue(FlatBufferBuilder builder, int skeletonValue) { builder.addByte(0, (byte) skeletonValue, (byte) 0); }
  public static void addValue(FlatBufferBuilder builder, float value) { builder.addFloat(1, value, 0.0f); }
  public static int endFkSkeletonValue(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FkSkeletonValue get(int j) { return get(new FkSkeletonValue(), j); }
    public FkSkeletonValue get(FkSkeletonValue obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public FkSkeletonValueT unpack() {
    FkSkeletonValueT _o = new FkSkeletonValueT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(FkSkeletonValueT _o) {
    int _oSkeletonValue = skeletonValue();
    _o.setSkeletonValue(_oSkeletonValue);
    float _oValue = value();
    _o.setValue(_oValue);
  }
  public static int pack(FlatBufferBuilder builder, FkSkeletonValueT _o) {
    if (_o == null) return 0;
    return createFkSkeletonValue(
      builder,
      _o.getSkeletonValue(),
      _o.getValue());
  }
}

