// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SteamVRTrackersSetting extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static SteamVRTrackersSetting getRootAsSteamVRTrackersSetting(ByteBuffer _bb) { return getRootAsSteamVRTrackersSetting(_bb, new SteamVRTrackersSetting()); }
  public static SteamVRTrackersSetting getRootAsSteamVRTrackersSetting(ByteBuffer _bb, SteamVRTrackersSetting obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SteamVRTrackersSetting __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean waist() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean chest() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean automaticTrackerToggle() { int o = __offset(16); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean leftFoot() { int o = __offset(18); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean rightFoot() { int o = __offset(20); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean leftKnee() { int o = __offset(22); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean rightKnee() { int o = __offset(24); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean leftElbow() { int o = __offset(26); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean rightElbow() { int o = __offset(28); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean leftHand() { int o = __offset(30); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean rightHand() { int o = __offset(32); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createSteamVRTrackersSetting(FlatBufferBuilder builder,
      boolean waist,
      boolean chest,
      boolean automaticTrackerToggle,
      boolean leftFoot,
      boolean rightFoot,
      boolean leftKnee,
      boolean rightKnee,
      boolean leftElbow,
      boolean rightElbow,
      boolean leftHand,
      boolean rightHand) {
    builder.startTable(15);
    SteamVRTrackersSetting.addRightHand(builder, rightHand);
    SteamVRTrackersSetting.addLeftHand(builder, leftHand);
    SteamVRTrackersSetting.addRightElbow(builder, rightElbow);
    SteamVRTrackersSetting.addLeftElbow(builder, leftElbow);
    SteamVRTrackersSetting.addRightKnee(builder, rightKnee);
    SteamVRTrackersSetting.addLeftKnee(builder, leftKnee);
    SteamVRTrackersSetting.addRightFoot(builder, rightFoot);
    SteamVRTrackersSetting.addLeftFoot(builder, leftFoot);
    SteamVRTrackersSetting.addAutomaticTrackerToggle(builder, automaticTrackerToggle);
    SteamVRTrackersSetting.addChest(builder, chest);
    SteamVRTrackersSetting.addWaist(builder, waist);
    return SteamVRTrackersSetting.endSteamVRTrackersSetting(builder);
  }

  public static void startSteamVRTrackersSetting(FlatBufferBuilder builder) { builder.startTable(15); }
  public static void addWaist(FlatBufferBuilder builder, boolean waist) { builder.addBoolean(0, waist, false); }
  public static void addChest(FlatBufferBuilder builder, boolean chest) { builder.addBoolean(1, chest, false); }
  public static void addAutomaticTrackerToggle(FlatBufferBuilder builder, boolean automaticTrackerToggle) { builder.addBoolean(6, automaticTrackerToggle, false); }
  public static void addLeftFoot(FlatBufferBuilder builder, boolean leftFoot) { builder.addBoolean(7, leftFoot, false); }
  public static void addRightFoot(FlatBufferBuilder builder, boolean rightFoot) { builder.addBoolean(8, rightFoot, false); }
  public static void addLeftKnee(FlatBufferBuilder builder, boolean leftKnee) { builder.addBoolean(9, leftKnee, false); }
  public static void addRightKnee(FlatBufferBuilder builder, boolean rightKnee) { builder.addBoolean(10, rightKnee, false); }
  public static void addLeftElbow(FlatBufferBuilder builder, boolean leftElbow) { builder.addBoolean(11, leftElbow, false); }
  public static void addRightElbow(FlatBufferBuilder builder, boolean rightElbow) { builder.addBoolean(12, rightElbow, false); }
  public static void addLeftHand(FlatBufferBuilder builder, boolean leftHand) { builder.addBoolean(13, leftHand, false); }
  public static void addRightHand(FlatBufferBuilder builder, boolean rightHand) { builder.addBoolean(14, rightHand, false); }
  public static int endSteamVRTrackersSetting(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SteamVRTrackersSetting get(int j) { return get(new SteamVRTrackersSetting(), j); }
    public SteamVRTrackersSetting get(SteamVRTrackersSetting obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public SteamVRTrackersSettingT unpack() {
    SteamVRTrackersSettingT _o = new SteamVRTrackersSettingT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(SteamVRTrackersSettingT _o) {
    boolean _oWaist = waist();
    _o.setWaist(_oWaist);
    boolean _oChest = chest();
    _o.setChest(_oChest);
    boolean _oAutomaticTrackerToggle = automaticTrackerToggle();
    _o.setAutomaticTrackerToggle(_oAutomaticTrackerToggle);
    boolean _oLeftFoot = leftFoot();
    _o.setLeftFoot(_oLeftFoot);
    boolean _oRightFoot = rightFoot();
    _o.setRightFoot(_oRightFoot);
    boolean _oLeftKnee = leftKnee();
    _o.setLeftKnee(_oLeftKnee);
    boolean _oRightKnee = rightKnee();
    _o.setRightKnee(_oRightKnee);
    boolean _oLeftElbow = leftElbow();
    _o.setLeftElbow(_oLeftElbow);
    boolean _oRightElbow = rightElbow();
    _o.setRightElbow(_oRightElbow);
    boolean _oLeftHand = leftHand();
    _o.setLeftHand(_oLeftHand);
    boolean _oRightHand = rightHand();
    _o.setRightHand(_oRightHand);
  }
  public static int pack(FlatBufferBuilder builder, SteamVRTrackersSettingT _o) {
    if (_o == null) return 0;
    return createSteamVRTrackersSetting(
      builder,
      _o.getWaist(),
      _o.getChest(),
      _o.getAutomaticTrackerToggle(),
      _o.getLeftFoot(),
      _o.getRightFoot(),
      _o.getLeftKnee(),
      _o.getRightKnee(),
      _o.getLeftElbow(),
      _o.getRightElbow(),
      _o.getLeftHand(),
      _o.getRightHand());
  }
}

