// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Sent every time the vrchat config state gets updated
 * used to display vrchat missconfig settings to the user
 */
@SuppressWarnings("unused")
public final class VRCConfigStateChangeResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static VRCConfigStateChangeResponse getRootAsVRCConfigStateChangeResponse(ByteBuffer _bb) { return getRootAsVRCConfigStateChangeResponse(_bb, new VRCConfigStateChangeResponse()); }
  public static VRCConfigStateChangeResponse getRootAsVRCConfigStateChangeResponse(ByteBuffer _bb, VRCConfigStateChangeResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public VRCConfigStateChangeResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean isSupported() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public solarxr_protocol.rpc.VRCConfigValidity validity() { return validity(new solarxr_protocol.rpc.VRCConfigValidity()); }
  public solarxr_protocol.rpc.VRCConfigValidity validity(solarxr_protocol.rpc.VRCConfigValidity obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public solarxr_protocol.rpc.VRCConfigValues state() { return state(new solarxr_protocol.rpc.VRCConfigValues()); }
  public solarxr_protocol.rpc.VRCConfigValues state(solarxr_protocol.rpc.VRCConfigValues obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public solarxr_protocol.rpc.VRCConfigRecommendedValues recommended() { return recommended(new solarxr_protocol.rpc.VRCConfigRecommendedValues()); }
  public solarxr_protocol.rpc.VRCConfigRecommendedValues recommended(solarxr_protocol.rpc.VRCConfigRecommendedValues obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createVRCConfigStateChangeResponse(FlatBufferBuilder builder,
      boolean isSupported,
      int validityOffset,
      int stateOffset,
      int recommendedOffset) {
    builder.startTable(4);
    VRCConfigStateChangeResponse.addRecommended(builder, recommendedOffset);
    VRCConfigStateChangeResponse.addState(builder, stateOffset);
    VRCConfigStateChangeResponse.addValidity(builder, validityOffset);
    VRCConfigStateChangeResponse.addIsSupported(builder, isSupported);
    return VRCConfigStateChangeResponse.endVRCConfigStateChangeResponse(builder);
  }

  public static void startVRCConfigStateChangeResponse(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addIsSupported(FlatBufferBuilder builder, boolean isSupported) { builder.addBoolean(0, isSupported, false); }
  public static void addValidity(FlatBufferBuilder builder, int validityOffset) { builder.addOffset(1, validityOffset, 0); }
  public static void addState(FlatBufferBuilder builder, int stateOffset) { builder.addOffset(2, stateOffset, 0); }
  public static void addRecommended(FlatBufferBuilder builder, int recommendedOffset) { builder.addOffset(3, recommendedOffset, 0); }
  public static int endVRCConfigStateChangeResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public VRCConfigStateChangeResponse get(int j) { return get(new VRCConfigStateChangeResponse(), j); }
    public VRCConfigStateChangeResponse get(VRCConfigStateChangeResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public VRCConfigStateChangeResponseT unpack() {
    VRCConfigStateChangeResponseT _o = new VRCConfigStateChangeResponseT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(VRCConfigStateChangeResponseT _o) {
    boolean _oIsSupported = isSupported();
    _o.setIsSupported(_oIsSupported);
    if (validity() != null) _o.setValidity(validity().unpack());
    else _o.setValidity(null);
    if (state() != null) _o.setState(state().unpack());
    else _o.setState(null);
    if (recommended() != null) _o.setRecommended(recommended().unpack());
    else _o.setRecommended(null);
  }
  public static int pack(FlatBufferBuilder builder, VRCConfigStateChangeResponseT _o) {
    if (_o == null) return 0;
    int _validity = _o.getValidity() == null ? 0 : solarxr_protocol.rpc.VRCConfigValidity.pack(builder, _o.getValidity());
    int _state = _o.getState() == null ? 0 : solarxr_protocol.rpc.VRCConfigValues.pack(builder, _o.getState());
    int _recommended = _o.getRecommended() == null ? 0 : solarxr_protocol.rpc.VRCConfigRecommendedValues.pack(builder, _o.getRecommended());
    return createVRCConfigStateChangeResponse(
      builder,
      _o.getIsSupported(),
      _validity,
      _state,
      _recommended);
  }
}

