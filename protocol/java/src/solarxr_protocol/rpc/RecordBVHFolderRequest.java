// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RecordBVHFolderRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static RecordBVHFolderRequest getRootAsRecordBVHFolderRequest(ByteBuffer _bb) { return getRootAsRecordBVHFolderRequest(_bb, new RecordBVHFolderRequest()); }
  public static RecordBVHFolderRequest getRootAsRecordBVHFolderRequest(ByteBuffer _bb, RecordBVHFolderRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RecordBVHFolderRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean stop() { int o = __offset(4); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  /**
   * Path sent when starting the recording, if null the recording won't happen
   */
  public String folderPath() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer folderPathAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer folderPathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createRecordBVHFolderRequest(FlatBufferBuilder builder,
      boolean stop,
      int folderPathOffset) {
    builder.startTable(2);
    RecordBVHFolderRequest.addFolderPath(builder, folderPathOffset);
    RecordBVHFolderRequest.addStop(builder, stop);
    return RecordBVHFolderRequest.endRecordBVHFolderRequest(builder);
  }

  public static void startRecordBVHFolderRequest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addStop(FlatBufferBuilder builder, boolean stop) { builder.addBoolean(0, stop, false); }
  public static void addFolderPath(FlatBufferBuilder builder, int folderPathOffset) { builder.addOffset(1, folderPathOffset, 0); }
  public static int endRecordBVHFolderRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RecordBVHFolderRequest get(int j) { return get(new RecordBVHFolderRequest(), j); }
    public RecordBVHFolderRequest get(RecordBVHFolderRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public RecordBVHFolderRequestT unpack() {
    RecordBVHFolderRequestT _o = new RecordBVHFolderRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(RecordBVHFolderRequestT _o) {
    boolean _oStop = stop();
    _o.setStop(_oStop);
    String _oFolderPath = folderPath();
    _o.setFolderPath(_oFolderPath);
  }
  public static int pack(FlatBufferBuilder builder, RecordBVHFolderRequestT _o) {
    if (_o == null) return 0;
    int _folderPath = _o.getFolderPath() == null ? 0 : builder.createString(_o.getFolderPath());
    return createRecordBVHFolderRequest(
      builder,
      _o.getStop(),
      _folderPath);
  }
}

