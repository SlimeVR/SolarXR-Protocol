// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Sends a custom cmd to the currently connected Tracker over the Serial Monitor
 */
@SuppressWarnings("unused")
public final class SerialTrackerCustomCommandRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static SerialTrackerCustomCommandRequest getRootAsSerialTrackerCustomCommandRequest(ByteBuffer _bb) { return getRootAsSerialTrackerCustomCommandRequest(_bb, new SerialTrackerCustomCommandRequest()); }
  public static SerialTrackerCustomCommandRequest getRootAsSerialTrackerCustomCommandRequest(ByteBuffer _bb, SerialTrackerCustomCommandRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SerialTrackerCustomCommandRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String command() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer commandAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer commandInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createSerialTrackerCustomCommandRequest(FlatBufferBuilder builder,
      int commandOffset) {
    builder.startTable(1);
    SerialTrackerCustomCommandRequest.addCommand(builder, commandOffset);
    return SerialTrackerCustomCommandRequest.endSerialTrackerCustomCommandRequest(builder);
  }

  public static void startSerialTrackerCustomCommandRequest(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addCommand(FlatBufferBuilder builder, int commandOffset) { builder.addOffset(0, commandOffset, 0); }
  public static int endSerialTrackerCustomCommandRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SerialTrackerCustomCommandRequest get(int j) { return get(new SerialTrackerCustomCommandRequest(), j); }
    public SerialTrackerCustomCommandRequest get(SerialTrackerCustomCommandRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public SerialTrackerCustomCommandRequestT unpack() {
    SerialTrackerCustomCommandRequestT _o = new SerialTrackerCustomCommandRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(SerialTrackerCustomCommandRequestT _o) {
    String _oCommand = command();
    _o.setCommand(_oCommand);
  }
  public static int pack(FlatBufferBuilder builder, SerialTrackerCustomCommandRequestT _o) {
    if (_o == null) return 0;
    int _command = _o.getCommand() == null ? 0 : builder.createString(_o.getCommand());
    return createSerialTrackerCustomCommandRequest(
      builder,
      _command);
  }
}

