// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class VRCConfigSettingToggleMute extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static VRCConfigSettingToggleMute getRootAsVRCConfigSettingToggleMute(ByteBuffer _bb) { return getRootAsVRCConfigSettingToggleMute(_bb, new VRCConfigSettingToggleMute()); }
  public static VRCConfigSettingToggleMute getRootAsVRCConfigSettingToggleMute(ByteBuffer _bb, VRCConfigSettingToggleMute obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public VRCConfigSettingToggleMute __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String key() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer keyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer keyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createVRCConfigSettingToggleMute(FlatBufferBuilder builder,
      int keyOffset) {
    builder.startTable(1);
    VRCConfigSettingToggleMute.addKey(builder, keyOffset);
    return VRCConfigSettingToggleMute.endVRCConfigSettingToggleMute(builder);
  }

  public static void startVRCConfigSettingToggleMute(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(0, keyOffset, 0); }
  public static int endVRCConfigSettingToggleMute(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public VRCConfigSettingToggleMute get(int j) { return get(new VRCConfigSettingToggleMute(), j); }
    public VRCConfigSettingToggleMute get(VRCConfigSettingToggleMute obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public VRCConfigSettingToggleMuteT unpack() {
    VRCConfigSettingToggleMuteT _o = new VRCConfigSettingToggleMuteT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(VRCConfigSettingToggleMuteT _o) {
    String _oKey = key();
    _o.setKey(_oKey);
  }
  public static int pack(FlatBufferBuilder builder, VRCConfigSettingToggleMuteT _o) {
    if (_o == null) return 0;
    int _key = _o.getKey() == null ? 0 : builder.createString(_o.getKey());
    return createVRCConfigSettingToggleMute(
      builder,
      _key);
  }
}

