// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TrackingChecklistSteamVRDisconnected extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static TrackingChecklistSteamVRDisconnected getRootAsTrackingChecklistSteamVRDisconnected(ByteBuffer _bb) { return getRootAsTrackingChecklistSteamVRDisconnected(_bb, new TrackingChecklistSteamVRDisconnected()); }
  public static TrackingChecklistSteamVRDisconnected getRootAsTrackingChecklistSteamVRDisconnected(ByteBuffer _bb, TrackingChecklistSteamVRDisconnected obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TrackingChecklistSteamVRDisconnected __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Name of bridge in the server's config
   */
  public String bridgeSettingsName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer bridgeSettingsNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer bridgeSettingsNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createTrackingChecklistSteamVRDisconnected(FlatBufferBuilder builder,
      int bridgeSettingsNameOffset) {
    builder.startTable(1);
    TrackingChecklistSteamVRDisconnected.addBridgeSettingsName(builder, bridgeSettingsNameOffset);
    return TrackingChecklistSteamVRDisconnected.endTrackingChecklistSteamVRDisconnected(builder);
  }

  public static void startTrackingChecklistSteamVRDisconnected(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addBridgeSettingsName(FlatBufferBuilder builder, int bridgeSettingsNameOffset) { builder.addOffset(0, bridgeSettingsNameOffset, 0); }
  public static int endTrackingChecklistSteamVRDisconnected(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TrackingChecklistSteamVRDisconnected get(int j) { return get(new TrackingChecklistSteamVRDisconnected(), j); }
    public TrackingChecklistSteamVRDisconnected get(TrackingChecklistSteamVRDisconnected obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public TrackingChecklistSteamVRDisconnectedT unpack() {
    TrackingChecklistSteamVRDisconnectedT _o = new TrackingChecklistSteamVRDisconnectedT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(TrackingChecklistSteamVRDisconnectedT _o) {
    String _oBridgeSettingsName = bridgeSettingsName();
    _o.setBridgeSettingsName(_oBridgeSettingsName);
  }
  public static int pack(FlatBufferBuilder builder, TrackingChecklistSteamVRDisconnectedT _o) {
    if (_o == null) return 0;
    int _bridgeSettingsName = _o.getBridgeSettingsName() == null ? 0 : builder.createString(_o.getBridgeSettingsName());
    return createTrackingChecklistSteamVRDisconnected(
      builder,
      _bridgeSettingsName);
  }
}

