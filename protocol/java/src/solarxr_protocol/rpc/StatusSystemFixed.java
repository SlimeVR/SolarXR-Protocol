// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * When an status is fixed and it's removed, it's ID is sent
 */
@SuppressWarnings("unused")
public final class StatusSystemFixed extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static StatusSystemFixed getRootAsStatusSystemFixed(ByteBuffer _bb) { return getRootAsStatusSystemFixed(_bb, new StatusSystemFixed()); }
  public static StatusSystemFixed getRootAsStatusSystemFixed(ByteBuffer _bb, StatusSystemFixed obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public StatusSystemFixed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long fixedStatusId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createStatusSystemFixed(FlatBufferBuilder builder,
      long fixedStatusId) {
    builder.startTable(1);
    StatusSystemFixed.addFixedStatusId(builder, fixedStatusId);
    return StatusSystemFixed.endStatusSystemFixed(builder);
  }

  public static void startStatusSystemFixed(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addFixedStatusId(FlatBufferBuilder builder, long fixedStatusId) { builder.addInt(0, (int) fixedStatusId, (int) 0L); }
  public static int endStatusSystemFixed(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public StatusSystemFixed get(int j) { return get(new StatusSystemFixed(), j); }
    public StatusSystemFixed get(StatusSystemFixed obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public StatusSystemFixedT unpack() {
    StatusSystemFixedT _o = new StatusSystemFixedT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(StatusSystemFixedT _o) {
    long _oFixedStatusId = fixedStatusId();
    _o.setFixedStatusId(_oFixedStatusId);
  }
  public static int pack(FlatBufferBuilder builder, StatusSystemFixedT _o) {
    if (_o == null) return 0;
    return createStatusSystemFixed(
      builder,
      _o.getFixedStatusId());
  }
}

