// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TrackingChecklistResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static TrackingChecklistResponse getRootAsTrackingChecklistResponse(ByteBuffer _bb) { return getRootAsTrackingChecklistResponse(_bb, new TrackingChecklistResponse()); }
  public static TrackingChecklistResponse getRootAsTrackingChecklistResponse(ByteBuffer _bb, TrackingChecklistResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public TrackingChecklistResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public solarxr_protocol.rpc.TrackingChecklistStep steps(int j) { return steps(new solarxr_protocol.rpc.TrackingChecklistStep(), j); }
  public solarxr_protocol.rpc.TrackingChecklistStep steps(solarxr_protocol.rpc.TrackingChecklistStep obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int stepsLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public solarxr_protocol.rpc.TrackingChecklistStep.Vector stepsVector() { return stepsVector(new solarxr_protocol.rpc.TrackingChecklistStep.Vector()); }
  public solarxr_protocol.rpc.TrackingChecklistStep.Vector stepsVector(solarxr_protocol.rpc.TrackingChecklistStep.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public int ignoredSteps(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int ignoredStepsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector ignoredStepsVector() { return ignoredStepsVector(new ByteVector()); }
  public ByteVector ignoredStepsVector(ByteVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer ignoredStepsAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer ignoredStepsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createTrackingChecklistResponse(FlatBufferBuilder builder,
      int stepsOffset,
      int ignoredStepsOffset) {
    builder.startTable(2);
    TrackingChecklistResponse.addIgnoredSteps(builder, ignoredStepsOffset);
    TrackingChecklistResponse.addSteps(builder, stepsOffset);
    return TrackingChecklistResponse.endTrackingChecklistResponse(builder);
  }

  public static void startTrackingChecklistResponse(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addSteps(FlatBufferBuilder builder, int stepsOffset) { builder.addOffset(0, stepsOffset, 0); }
  public static int createStepsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startStepsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addIgnoredSteps(FlatBufferBuilder builder, int ignoredStepsOffset) { builder.addOffset(1, ignoredStepsOffset, 0); }
  public static int createIgnoredStepsVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createIgnoredStepsVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startIgnoredStepsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTrackingChecklistResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public TrackingChecklistResponse get(int j) { return get(new TrackingChecklistResponse(), j); }
    public TrackingChecklistResponse get(TrackingChecklistResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public TrackingChecklistResponseT unpack() {
    TrackingChecklistResponseT _o = new TrackingChecklistResponseT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(TrackingChecklistResponseT _o) {
    solarxr_protocol.rpc.TrackingChecklistStepT[] _oSteps = new solarxr_protocol.rpc.TrackingChecklistStepT[stepsLength()];
    for (int _j = 0; _j < stepsLength(); ++_j) {_oSteps[_j] = (steps(_j) != null ? steps(_j).unpack() : null);}
    _o.setSteps(_oSteps);
    int[] _oIgnoredSteps = new int[ignoredStepsLength()];
    for (int _j = 0; _j < ignoredStepsLength(); ++_j) {_oIgnoredSteps[_j] = ignoredSteps(_j);}
    _o.setIgnoredSteps(_oIgnoredSteps);
  }
  public static int pack(FlatBufferBuilder builder, TrackingChecklistResponseT _o) {
    if (_o == null) return 0;
    int _steps = 0;
    if (_o.getSteps() != null) {
      int[] __steps = new int[_o.getSteps().length];
      int _j = 0;
      for (solarxr_protocol.rpc.TrackingChecklistStepT _e : _o.getSteps()) { __steps[_j] = solarxr_protocol.rpc.TrackingChecklistStep.pack(builder, _e); _j++;}
      _steps = createStepsVector(builder, __steps);
    }
    int _ignoredSteps = 0;
    if (_o.getIgnoredSteps() != null) {
      byte[] __ignoredSteps = new byte[_o.getIgnoredSteps().length];
      int _j = 0;
      for (int _e : _o.getIgnoredSteps()) { __ignoredSteps[_j] = (byte) _e; _j++;}
      _ignoredSteps = createIgnoredStepsVector(builder, __ignoredSteps);
    }
    return createTrackingChecklistResponse(
      builder,
      _steps,
      _ignoredSteps);
  }
}

