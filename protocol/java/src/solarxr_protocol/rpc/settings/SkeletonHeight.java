// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc.settings;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SkeletonHeight extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_22_10_26(); }
  public static SkeletonHeight getRootAsSkeletonHeight(ByteBuffer _bb) { return getRootAsSkeletonHeight(_bb, new SkeletonHeight()); }
  public static SkeletonHeight getRootAsSkeletonHeight(ByteBuffer _bb, SkeletonHeight obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SkeletonHeight __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean hasHmdHeight() { return 0 != __offset(4); }
  public float hmdHeight() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0f; }
  public boolean hasFloorHeight() { return 0 != __offset(6); }
  public float floorHeight() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0f; }

  public static int createSkeletonHeight(FlatBufferBuilder builder,
      float hmdHeight,
      float floorHeight) {
    builder.startTable(2);
    SkeletonHeight.addFloorHeight(builder, floorHeight);
    SkeletonHeight.addHmdHeight(builder, hmdHeight);
    return SkeletonHeight.endSkeletonHeight(builder);
  }

  public static void startSkeletonHeight(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addHmdHeight(FlatBufferBuilder builder, float hmdHeight) { builder.addFloat(0, hmdHeight, 0f); }
  public static void addFloorHeight(FlatBufferBuilder builder, float floorHeight) { builder.addFloat(1, floorHeight, 0f); }
  public static int endSkeletonHeight(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SkeletonHeight get(int j) { return get(new SkeletonHeight(), j); }
    public SkeletonHeight get(SkeletonHeight obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public SkeletonHeightT unpack() {
    SkeletonHeightT _o = new SkeletonHeightT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(SkeletonHeightT _o) {
    Float _oHmdHeight = hasHmdHeight() ? hmdHeight() : null;
    _o.setHmdHeight(_oHmdHeight);
    Float _oFloorHeight = hasFloorHeight() ? floorHeight() : null;
    _o.setFloorHeight(_oFloorHeight);
  }
  public static int pack(FlatBufferBuilder builder, SkeletonHeightT _o) {
    if (_o == null) return 0;
    return createSkeletonHeight(
      builder,
      _o.getHmdHeight(),
      _o.getFloorHeight());
  }
}

