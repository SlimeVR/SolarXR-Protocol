// automatically generated by the FlatBuffers compiler, do not modify

package slimevr_protocol.server;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DeviceStatus extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static DeviceStatus getRootAsDeviceStatus(ByteBuffer _bb) { return getRootAsDeviceStatus(_bb, new DeviceStatus()); }
  public static DeviceStatus getRootAsDeviceStatus(ByteBuffer _bb, DeviceStatus obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DeviceStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int id() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int role() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public slimevr_protocol.datatypes.Quat rotation() { return rotation(new slimevr_protocol.datatypes.Quat()); }
  public slimevr_protocol.datatypes.Quat rotation(slimevr_protocol.datatypes.Quat obj) { int o = __offset(10); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public slimevr_protocol.datatypes.Vec3f position() { return position(new slimevr_protocol.datatypes.Vec3f()); }
  public slimevr_protocol.datatypes.Vec3f position(slimevr_protocol.datatypes.Vec3f obj) { int o = __offset(12); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public int status() { int o = __offset(14); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public float boneLength() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public int battery() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public boolean computed() { int o = __offset(20); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public short signal() { int o = __offset(22); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public int tps() { int o = __offset(24); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int ping() { int o = __offset(26); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }

  public static void startDeviceStatus(FlatBufferBuilder builder) { builder.startTable(12); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addByte(0, (byte) id, (byte) 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addRole(FlatBufferBuilder builder, int role) { builder.addByte(2, (byte) role, (byte) 0); }
  public static void addRotation(FlatBufferBuilder builder, int rotationOffset) { builder.addStruct(3, rotationOffset, 0); }
  public static void addPosition(FlatBufferBuilder builder, int positionOffset) { builder.addStruct(4, positionOffset, 0); }
  public static void addStatus(FlatBufferBuilder builder, int status) { builder.addByte(5, (byte) status, (byte) 0); }
  public static void addBoneLength(FlatBufferBuilder builder, float boneLength) { builder.addFloat(6, boneLength, 0.0f); }
  public static void addBattery(FlatBufferBuilder builder, int battery) { builder.addByte(7, (byte) battery, (byte) 0); }
  public static void addComputed(FlatBufferBuilder builder, boolean computed) { builder.addBoolean(8, computed, false); }
  public static void addSignal(FlatBufferBuilder builder, short signal) { builder.addShort(9, signal, 0); }
  public static void addTps(FlatBufferBuilder builder, int tps) { builder.addByte(10, (byte) tps, (byte) 0); }
  public static void addPing(FlatBufferBuilder builder, int ping) { builder.addShort(11, (short) ping, (short) 0); }
  public static int endDeviceStatus(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DeviceStatus get(int j) { return get(new DeviceStatus(), j); }
    public DeviceStatus get(DeviceStatus obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

