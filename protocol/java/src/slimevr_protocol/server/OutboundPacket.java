// automatically generated by the FlatBuffers compiler, do not modify

package slimevr_protocol.server;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class OutboundPacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static OutboundPacket getRootAsOutboundPacket(ByteBuffer _bb) { return getRootAsOutboundPacket(_bb, new OutboundPacket()); }
  public static OutboundPacket getRootAsOutboundPacket(ByteBuffer _bb, OutboundPacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public OutboundPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long packetCounter() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public boolean acknowledgeMe() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public byte packetType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table packet(Table obj) { int o = __offset(10); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createOutboundPacket(FlatBufferBuilder builder,
      long packetCounter,
      boolean acknowledgeMe,
      byte packetType,
      int packetOffset) {
    builder.startTable(4);
    OutboundPacket.addPacket(builder, packetOffset);
    OutboundPacket.addPacketCounter(builder, packetCounter);
    OutboundPacket.addPacketType(builder, packetType);
    OutboundPacket.addAcknowledgeMe(builder, acknowledgeMe);
    return OutboundPacket.endOutboundPacket(builder);
  }

  public static void startOutboundPacket(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addPacketCounter(FlatBufferBuilder builder, long packetCounter) { builder.addInt(0, (int) packetCounter, (int) 0L); }
  public static void addAcknowledgeMe(FlatBufferBuilder builder, boolean acknowledgeMe) { builder.addBoolean(1, acknowledgeMe, false); }
  public static void addPacketType(FlatBufferBuilder builder, byte packetType) { builder.addByte(2, packetType, 0); }
  public static void addPacket(FlatBufferBuilder builder, int packetOffset) { builder.addOffset(3, packetOffset, 0); }
  public static int endOutboundPacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public OutboundPacket get(int j) { return get(new OutboundPacket(), j); }
    public OutboundPacket get(OutboundPacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

