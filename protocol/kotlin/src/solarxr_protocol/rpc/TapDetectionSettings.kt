// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class TapDetectionSettings : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : TapDetectionSettings {
        __init(_i, _bb)
        return this
    }
    val tapResetDelay : Float?
        get() {
            val o = __offset(4)
            return if(o != 0) bb.getFloat(o + bb_pos) else null
        }
    val tapResetEnabled : Boolean?
        get() {
            val o = __offset(6)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else null
        }
    val tapResetTaps : UByte?
        get() {
            val o = __offset(8)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else null
        }
    val tapQuickResetDelay : Float?
        get() {
            val o = __offset(10)
            return if(o != 0) bb.getFloat(o + bb_pos) else null
        }
    val tapQuickResetEnabled : Boolean?
        get() {
            val o = __offset(12)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else null
        }
    val tapQuickResetTaps : UByte?
        get() {
            val o = __offset(14)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else null
        }
    val tapMountingResetDelay : Float?
        get() {
            val o = __offset(16)
            return if(o != 0) bb.getFloat(o + bb_pos) else null
        }
    val tapMountingResetEnabled : Boolean?
        get() {
            val o = __offset(18)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else null
        }
    val tapMountingResetTaps : UByte?
        get() {
            val o = __offset(20)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else null
        }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsTapDetectionSettings(_bb: ByteBuffer): TapDetectionSettings = getRootAsTapDetectionSettings(_bb, TapDetectionSettings())
        @JvmStatic
        fun getRootAsTapDetectionSettings(_bb: ByteBuffer, obj: TapDetectionSettings): TapDetectionSettings {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createTapDetectionSettings(builder: FlatBufferBuilder, tapResetDelay: Float?, tapResetEnabled: Boolean?, tapResetTaps: UByte?, tapQuickResetDelay: Float?, tapQuickResetEnabled: Boolean?, tapQuickResetTaps: UByte?, tapMountingResetDelay: Float?, tapMountingResetEnabled: Boolean?, tapMountingResetTaps: UByte?) : Int {
            builder.startTable(9)
            tapMountingResetDelay?.run { addTapMountingResetDelay(builder, tapMountingResetDelay) }
            tapQuickResetDelay?.run { addTapQuickResetDelay(builder, tapQuickResetDelay) }
            tapResetDelay?.run { addTapResetDelay(builder, tapResetDelay) }
            tapMountingResetTaps?.run { addTapMountingResetTaps(builder, tapMountingResetTaps) }
            tapMountingResetEnabled?.run { addTapMountingResetEnabled(builder, tapMountingResetEnabled) }
            tapQuickResetTaps?.run { addTapQuickResetTaps(builder, tapQuickResetTaps) }
            tapQuickResetEnabled?.run { addTapQuickResetEnabled(builder, tapQuickResetEnabled) }
            tapResetTaps?.run { addTapResetTaps(builder, tapResetTaps) }
            tapResetEnabled?.run { addTapResetEnabled(builder, tapResetEnabled) }
            return endTapDetectionSettings(builder)
        }
        @JvmStatic
        fun startTapDetectionSettings(builder: FlatBufferBuilder) = builder.startTable(9)
        @JvmStatic
        fun addTapResetDelay(builder: FlatBufferBuilder, tapResetDelay: Float) = builder.addFloat(0, tapResetDelay, 0.0)
        @JvmStatic
        fun addTapResetEnabled(builder: FlatBufferBuilder, tapResetEnabled: Boolean) = builder.addBoolean(1, tapResetEnabled, false)
        @JvmStatic
        fun addTapResetTaps(builder: FlatBufferBuilder, tapResetTaps: UByte) = builder.addByte(2, tapResetTaps.toByte(), 0)
        @JvmStatic
        fun addTapQuickResetDelay(builder: FlatBufferBuilder, tapQuickResetDelay: Float) = builder.addFloat(3, tapQuickResetDelay, 0.0)
        @JvmStatic
        fun addTapQuickResetEnabled(builder: FlatBufferBuilder, tapQuickResetEnabled: Boolean) = builder.addBoolean(4, tapQuickResetEnabled, false)
        @JvmStatic
        fun addTapQuickResetTaps(builder: FlatBufferBuilder, tapQuickResetTaps: UByte) = builder.addByte(5, tapQuickResetTaps.toByte(), 0)
        @JvmStatic
        fun addTapMountingResetDelay(builder: FlatBufferBuilder, tapMountingResetDelay: Float) = builder.addFloat(6, tapMountingResetDelay, 0.0)
        @JvmStatic
        fun addTapMountingResetEnabled(builder: FlatBufferBuilder, tapMountingResetEnabled: Boolean) = builder.addBoolean(7, tapMountingResetEnabled, false)
        @JvmStatic
        fun addTapMountingResetTaps(builder: FlatBufferBuilder, tapMountingResetTaps: UByte) = builder.addByte(8, tapMountingResetTaps.toByte(), 0)
        @JvmStatic
        fun endTapDetectionSettings(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
