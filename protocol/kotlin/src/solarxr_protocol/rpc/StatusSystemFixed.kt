// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

/**
 * When an status is fixed and it's removed, it's ID is sent
 */
@Suppress("unused")
class StatusSystemFixed : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : StatusSystemFixed {
        __init(_i, _bb)
        return this
    }
    val fixedStatusId : UInt
        get() {
            val o = __offset(4)
            return if(o != 0) bb.getInt(o + bb_pos).toUInt() else 0u
        }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsStatusSystemFixed(_bb: ByteBuffer): StatusSystemFixed = getRootAsStatusSystemFixed(_bb, StatusSystemFixed())
        @JvmStatic
        fun getRootAsStatusSystemFixed(_bb: ByteBuffer, obj: StatusSystemFixed): StatusSystemFixed {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createStatusSystemFixed(builder: FlatBufferBuilder, fixedStatusId: UInt) : Int {
            builder.startTable(1)
            addFixedStatusId(builder, fixedStatusId)
            return endStatusSystemFixed(builder)
        }
        @JvmStatic
        fun startStatusSystemFixed(builder: FlatBufferBuilder) = builder.startTable(1)
        @JvmStatic
        fun addFixedStatusId(builder: FlatBufferBuilder, fixedStatusId: UInt) = builder.addInt(0, fixedStatusId.toInt(), 0)
        @JvmStatic
        fun endStatusSystemFixed(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
