// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class FirmwareUpdateStatusResponse : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : FirmwareUpdateStatusResponse {
        __init(_i, _bb)
        return this
    }
    val deviceIdType : UByte
        get() {
            val o = __offset(4)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    fun deviceId(obj: Table) : Table? {
        val o = __offset(6); return if (o != 0) __union(obj, o + bb_pos) else null
    }
    val status : UByte
        get() {
            val o = __offset(8)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    /**
     * from 0 to 100
     */
    val progress : Byte
        get() {
            val o = __offset(10)
            return if(o != 0) bb.get(o + bb_pos) else 0
        }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsFirmwareUpdateStatusResponse(_bb: ByteBuffer): FirmwareUpdateStatusResponse = getRootAsFirmwareUpdateStatusResponse(_bb, FirmwareUpdateStatusResponse())
        @JvmStatic
        fun getRootAsFirmwareUpdateStatusResponse(_bb: ByteBuffer, obj: FirmwareUpdateStatusResponse): FirmwareUpdateStatusResponse {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createFirmwareUpdateStatusResponse(builder: FlatBufferBuilder, deviceIdType: UByte, deviceIdOffset: Int, status: UByte, progress: Byte) : Int {
            builder.startTable(4)
            addDeviceId(builder, deviceIdOffset)
            addProgress(builder, progress)
            addStatus(builder, status)
            addDeviceIdType(builder, deviceIdType)
            return endFirmwareUpdateStatusResponse(builder)
        }
        @JvmStatic
        fun startFirmwareUpdateStatusResponse(builder: FlatBufferBuilder) = builder.startTable(4)
        @JvmStatic
        fun addDeviceIdType(builder: FlatBufferBuilder, deviceIdType: UByte) = builder.addByte(0, deviceIdType.toByte(), 0)
        @JvmStatic
        fun addDeviceId(builder: FlatBufferBuilder, deviceId: Int) = builder.addOffset(1, deviceId, 0)
        @JvmStatic
        fun addStatus(builder: FlatBufferBuilder, status: UByte) = builder.addByte(2, status.toByte(), 0)
        @JvmStatic
        fun addProgress(builder: FlatBufferBuilder, progress: Byte) = builder.addByte(3, progress, 0)
        @JvmStatic
        fun endFirmwareUpdateStatusResponse(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
