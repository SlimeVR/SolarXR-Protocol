// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class RecordBVHRequest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : RecordBVHRequest {
        __init(_i, _bb)
        return this
    }
    val stop : Boolean
        get() {
            val o = __offset(4)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val pathType : UByte
        get() {
            val o = __offset(6)
            return if(o != 0) bb.get(o + bb_pos).toUByte() else 0u
        }
    /**
     * Path sent when starting the recording, if null the recording won't happen
     */
    fun path(obj: Table) : Table? {
        val o = __offset(8); return if (o != 0) __union(obj, o + bb_pos) else null
    }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsRecordBVHRequest(_bb: ByteBuffer): RecordBVHRequest = getRootAsRecordBVHRequest(_bb, RecordBVHRequest())
        @JvmStatic
        fun getRootAsRecordBVHRequest(_bb: ByteBuffer, obj: RecordBVHRequest): RecordBVHRequest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createRecordBVHRequest(builder: FlatBufferBuilder, stop: Boolean, pathType: UByte, pathOffset: Int) : Int {
            builder.startTable(3)
            addPath(builder, pathOffset)
            addPathType(builder, pathType)
            addStop(builder, stop)
            return endRecordBVHRequest(builder)
        }
        @JvmStatic
        fun startRecordBVHRequest(builder: FlatBufferBuilder) = builder.startTable(3)
        @JvmStatic
        fun addStop(builder: FlatBufferBuilder, stop: Boolean) = builder.addBoolean(0, stop, false)
        @JvmStatic
        fun addPathType(builder: FlatBufferBuilder, pathType: UByte) = builder.addByte(1, pathType.toByte(), 0)
        @JvmStatic
        fun addPath(builder: FlatBufferBuilder, path: Int) = builder.addOffset(2, path, 0)
        @JvmStatic
        fun endRecordBVHRequest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
