// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class StayAlignedSettings : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : StayAlignedSettings {
        __init(_i, _bb)
        return this
    }
    val enabled : Boolean
        get() {
            val o = __offset(4)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val extraYawCorrection : Boolean
        get() {
            val o = __offset(6)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val hideYawCorrection : Boolean
        get() {
            val o = __offset(8)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val standingEnabled : Boolean
        get() {
            val o = __offset(10)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val standingUpperLegAngle : Float
        get() {
            val o = __offset(12)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val standingLowerLegAngle : Float
        get() {
            val o = __offset(14)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val standingFootAngle : Float
        get() {
            val o = __offset(16)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val sittingEnabled : Boolean
        get() {
            val o = __offset(18)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val sittingUpperLegAngle : Float
        get() {
            val o = __offset(20)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val sittingLowerLegAngle : Float
        get() {
            val o = __offset(22)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val sittingFootAngle : Float
        get() {
            val o = __offset(24)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val flatEnabled : Boolean
        get() {
            val o = __offset(26)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    val flatUpperLegAngle : Float
        get() {
            val o = __offset(28)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val flatLowerLegAngle : Float
        get() {
            val o = __offset(30)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    val flatFootAngle : Float
        get() {
            val o = __offset(32)
            return if(o != 0) bb.getFloat(o + bb_pos) else 0.0f
        }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsStayAlignedSettings(_bb: ByteBuffer): StayAlignedSettings = getRootAsStayAlignedSettings(_bb, StayAlignedSettings())
        @JvmStatic
        fun getRootAsStayAlignedSettings(_bb: ByteBuffer, obj: StayAlignedSettings): StayAlignedSettings {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createStayAlignedSettings(builder: FlatBufferBuilder, enabled: Boolean, extraYawCorrection: Boolean, hideYawCorrection: Boolean, standingEnabled: Boolean, standingUpperLegAngle: Float, standingLowerLegAngle: Float, standingFootAngle: Float, sittingEnabled: Boolean, sittingUpperLegAngle: Float, sittingLowerLegAngle: Float, sittingFootAngle: Float, flatEnabled: Boolean, flatUpperLegAngle: Float, flatLowerLegAngle: Float, flatFootAngle: Float) : Int {
            builder.startTable(15)
            addFlatFootAngle(builder, flatFootAngle)
            addFlatLowerLegAngle(builder, flatLowerLegAngle)
            addFlatUpperLegAngle(builder, flatUpperLegAngle)
            addSittingFootAngle(builder, sittingFootAngle)
            addSittingLowerLegAngle(builder, sittingLowerLegAngle)
            addSittingUpperLegAngle(builder, sittingUpperLegAngle)
            addStandingFootAngle(builder, standingFootAngle)
            addStandingLowerLegAngle(builder, standingLowerLegAngle)
            addStandingUpperLegAngle(builder, standingUpperLegAngle)
            addFlatEnabled(builder, flatEnabled)
            addSittingEnabled(builder, sittingEnabled)
            addStandingEnabled(builder, standingEnabled)
            addHideYawCorrection(builder, hideYawCorrection)
            addExtraYawCorrection(builder, extraYawCorrection)
            addEnabled(builder, enabled)
            return endStayAlignedSettings(builder)
        }
        @JvmStatic
        fun startStayAlignedSettings(builder: FlatBufferBuilder) = builder.startTable(15)
        @JvmStatic
        fun addEnabled(builder: FlatBufferBuilder, enabled: Boolean) = builder.addBoolean(0, enabled, false)
        @JvmStatic
        fun addExtraYawCorrection(builder: FlatBufferBuilder, extraYawCorrection: Boolean) = builder.addBoolean(1, extraYawCorrection, false)
        @JvmStatic
        fun addHideYawCorrection(builder: FlatBufferBuilder, hideYawCorrection: Boolean) = builder.addBoolean(2, hideYawCorrection, false)
        @JvmStatic
        fun addStandingEnabled(builder: FlatBufferBuilder, standingEnabled: Boolean) = builder.addBoolean(3, standingEnabled, false)
        @JvmStatic
        fun addStandingUpperLegAngle(builder: FlatBufferBuilder, standingUpperLegAngle: Float) = builder.addFloat(4, standingUpperLegAngle, 0.0)
        @JvmStatic
        fun addStandingLowerLegAngle(builder: FlatBufferBuilder, standingLowerLegAngle: Float) = builder.addFloat(5, standingLowerLegAngle, 0.0)
        @JvmStatic
        fun addStandingFootAngle(builder: FlatBufferBuilder, standingFootAngle: Float) = builder.addFloat(6, standingFootAngle, 0.0)
        @JvmStatic
        fun addSittingEnabled(builder: FlatBufferBuilder, sittingEnabled: Boolean) = builder.addBoolean(7, sittingEnabled, false)
        @JvmStatic
        fun addSittingUpperLegAngle(builder: FlatBufferBuilder, sittingUpperLegAngle: Float) = builder.addFloat(8, sittingUpperLegAngle, 0.0)
        @JvmStatic
        fun addSittingLowerLegAngle(builder: FlatBufferBuilder, sittingLowerLegAngle: Float) = builder.addFloat(9, sittingLowerLegAngle, 0.0)
        @JvmStatic
        fun addSittingFootAngle(builder: FlatBufferBuilder, sittingFootAngle: Float) = builder.addFloat(10, sittingFootAngle, 0.0)
        @JvmStatic
        fun addFlatEnabled(builder: FlatBufferBuilder, flatEnabled: Boolean) = builder.addBoolean(11, flatEnabled, false)
        @JvmStatic
        fun addFlatUpperLegAngle(builder: FlatBufferBuilder, flatUpperLegAngle: Float) = builder.addFloat(12, flatUpperLegAngle, 0.0)
        @JvmStatic
        fun addFlatLowerLegAngle(builder: FlatBufferBuilder, flatLowerLegAngle: Float) = builder.addFloat(13, flatLowerLegAngle, 0.0)
        @JvmStatic
        fun addFlatFootAngle(builder: FlatBufferBuilder, flatFootAngle: Float) = builder.addFloat(14, flatFootAngle, 0.0)
        @JvmStatic
        fun endStayAlignedSettings(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
