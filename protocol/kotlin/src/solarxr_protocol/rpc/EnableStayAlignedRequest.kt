// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class EnableStayAlignedRequest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : EnableStayAlignedRequest {
        __init(_i, _bb)
        return this
    }
    val enable : Boolean
        get() {
            val o = __offset(4)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsEnableStayAlignedRequest(_bb: ByteBuffer): EnableStayAlignedRequest = getRootAsEnableStayAlignedRequest(_bb, EnableStayAlignedRequest())
        @JvmStatic
        fun getRootAsEnableStayAlignedRequest(_bb: ByteBuffer, obj: EnableStayAlignedRequest): EnableStayAlignedRequest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createEnableStayAlignedRequest(builder: FlatBufferBuilder, enable: Boolean) : Int {
            builder.startTable(1)
            addEnable(builder, enable)
            return endEnableStayAlignedRequest(builder)
        }
        @JvmStatic
        fun startEnableStayAlignedRequest(builder: FlatBufferBuilder) = builder.startTable(1)
        @JvmStatic
        fun addEnable(builder: FlatBufferBuilder, enable: Boolean) = builder.addBoolean(0, enable, false)
        @JvmStatic
        fun endEnableStayAlignedRequest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
