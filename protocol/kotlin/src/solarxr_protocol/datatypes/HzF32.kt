// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.datatypes

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

/**
 * Frequency as 32 bit float
 */
@Suppress("unused")
class HzF32 : Struct() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : HzF32 {
        __init(_i, _bb)
        return this
    }
    val f : Float get() = bb.getFloat(bb_pos + 0)
    companion object {
        @JvmStatic
        fun createHzF32(builder: FlatBufferBuilder, f: Float) : Int {
            builder.prep(4, 4)
            builder.putFloat(f)
            return builder.offset()
        }
    }
}
