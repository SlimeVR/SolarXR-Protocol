// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.datatypes.hardware_info

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

/**
 * A MAC address or a bluetooth address, or some other uniquely identifying address
 * associated with the endpoint that we are communicating with. If it doesn't take
 * up the full set of bytes, it is aligned towards the least significant bits.
 */
@Suppress("unused")
class HardwareAddress : Struct() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : HardwareAddress {
        __init(_i, _bb)
        return this
    }
    val addr : ULong get() = bb.getLong(bb_pos + 0).toULong()
    companion object {
        @JvmStatic
        fun createHardwareAddress(builder: FlatBufferBuilder, addr: ULong) : Int {
            builder.prep(8, 8)
            builder.putLong(addr.toLong())
            return builder.offset()
        }
    }
}
