// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.datatypes.math

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class Vec3f : Struct() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : Vec3f {
        __init(_i, _bb)
        return this
    }
    val x : Float get() = bb.getFloat(bb_pos + 0)
    val y : Float get() = bb.getFloat(bb_pos + 4)
    val z : Float get() = bb.getFloat(bb_pos + 8)
    companion object {
        @JvmStatic
        fun createVec3f(builder: FlatBufferBuilder, x: Float, y: Float, z: Float) : Int {
            builder.prep(4, 12)
            builder.putFloat(z)
            builder.putFloat(y)
            builder.putFloat(x)
            return builder.offset()
        }
    }
}
